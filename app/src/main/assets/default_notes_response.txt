[{"message":"positive","id":"52","title":"This is test notes02","notes_text":"<p>Hello i am under the water<\/p>\r\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs 1stsemester","subject":"1","chapter":"2","uploaded_time":"1 monthago","status":"enable","pinned":"no"},{"message":"positive","id":"51","title":"This is testnotes01","notes_text":"<p>Hello i am under the water<\/p>\r\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs 1stsemester","subject":"1","chapter":"2","uploaded_time":"1 monthago","status":"enable","pinned":"no"},{"message":"positive","id":"50","title":"A story for youall","notes_text":"<p>&nbsp;<\/p>\n\n <div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px10px\">\n<p>\u090f\u0915 \u092c\u093e\u0930 \u0915\u0940 \u092c\u093e\u0924 \u0939\u0948,\u092c\u093e\u0926\u0936\u093e\u0939 \u0905\u0915\u092c\u0930 \u0905\u092a\u0928\u0947\u0936\u0939\u091c\u093e\u0926\u0947 \u0915\u0947 \u0938\u093e\u0925\u0930\u093e\u091c-\u0926\u0930\u092c\u093e\u0930 \u092e\u0947\u0902\u0909\u092a\u0938\u094d\u0925\u093f\u0924 \u0925\u0947\u0964 \u0926\u0930\u092c\u093e\u0930\u092e\u0947\u0902 \u092e\u094c\u091c\u0942\u0926 \u0939\u0930 \u0915\u093f\u0938\u0940 \u0915\u0940\u0928\u091c\u0930 \u0936\u0939\u091c\u093e\u0926\u0947 \u092a\u0930 \u0925\u0940\u0964\u0935\u0939\u093e\u0902 \u092e\u094c\u091c\u0942\u0926 \u0939\u0930 \u0915\u094b\u0908\u092f\u0939\u0940 \u0915\u0939 \u0930\u0939\u093e \u0925\u093e \u0915\u093f\u0936\u0939\u091c\u093e\u0926\u093e \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u093e\u0938\u092c\u0938\u0947 \u0916\u0942\u092c\u0938\u0942\u0930\u0924 \u092c\u091a\u094d\u091a\u093e\u0939\u0948\u0964 \u0938\u092d\u0940 \u0915\u0940 \u092c\u093e\u0924 \u0938\u0941\u0928\u0915\u0930\u092c\u093e\u0926\u0936\u093e\u0939 \u0905\u0915\u092c\u0930 \u0928\u0947 \u092d\u0940\u092e\u0941\u0938\u094d\u0915\u0941\u0930\u093e\u0915\u0930 \u092f\u0939\u0940 \u0915\u0939\u093e\u0915\u093f \u0909\u0928\u0915\u093e \u0936\u0939\u091c\u093e\u0926\u093e\u0926\u0941\u0928\u093f\u092f\u093e \u0915\u093e \u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930 \u092c\u091a\u094d\u091a\u093e \u0939\u0948\u0964 \u0938\u092d\u0940\u0926\u0930\u092c\u093e\u0930\u0940 \u0905\u0915\u092c\u0930 \u0915\u0940 \u0907\u0938\u092c\u093e\u0924 \u092a\u0930 \u0939\u093e\u092e\u0940 \u092d\u0930\u0924\u0947\u0939\u0948\u0902\u0964 \u0924\u092d\u0940 \u0905\u0915\u092c\u0930 \u092c\u0940\u0930\u092c\u0932\u0938\u0947 \u092a\u0942\u091b\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f\u0924\u0941\u092e\u094d\u0939\u093e\u0930\u093e \u0907\u0938 \u092c\u093e\u0930\u0947\u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u0935\u093f\u091a\u093e\u0930 \u0939\u0948\u0964<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932 : \u092e\u0939\u093e\u0930\u093e\u091c,\u0936\u0939\u091c\u093e\u0926\u093e \u0938\u0941\u0902\u0926\u0930 \u0939\u0948,\u0932\u0947\u0915\u093f\u0928 \u092e\u0947\u0930\u0947 \u0916\u094d\u092f\u093e\u0932\u0938\u0947 \u0936\u0939\u091c\u093e\u0926\u093e \u092a\u0942\u0930\u0940\u0926\u0941\u0928\u093f\u092f\u093e \u0915\u093e \u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930 \u092c\u091a\u094d\u091a\u093e \u0928\u0939\u0940\u0902\u0939\u0948\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930 : \u092c\u0940\u0930\u092c\u0932\u0924\u0941\u092e\u094d\u0939\u093e\u0930\u0947 \u0915\u0939\u0928\u0947 \u0915\u093e\u0915\u094d\u092f\u093e \u092e\u0924\u0932\u092c \u0939\u0948 \u0915\u093f\u0936\u0939\u091c\u093e\u0926\u093e \u0938\u0941\u0902\u0926\u0930 \u0928\u0939\u0940\u0902\u0939\u0948?<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932 : \u0928\u0939\u0940\u0902\u0928\u0939\u0940\u0902, \u091c\u0939\u093e\u0902\u092a\u0928\u093e\u0939\u092e\u0947\u0930\u093e \u0915\u0939\u0928\u0947 \u0915\u093e \u092e\u0924\u0932\u092c\u092f\u0939 \u0928\u0939\u0940\u0902 \u0925\u093e\u0964 \u0906\u092a\u092e\u0947\u0930\u0940 \u092c\u093e\u0924 \u0915\u093e \u0917\u0932\u0924\u092e\u0924\u0932\u092c \u0928 \u0928\u093f\u0915\u093e\u0932\u0947\u0902\u0964\u0939\u092e\u093e\u0930\u093e \u0936\u0939\u091c\u093e\u0926\u093e\u092c\u0939\u0941\u0924 \u0916\u0942\u092c\u0938\u0942\u0930\u0924 \u0939\u0948,\u0932\u0947\u0915\u093f\u0928 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902\u0914\u0930 \u092d\u0940 \u0938\u0941\u0902\u0926\u0930 \u092c\u091a\u094d\u091a\u0947\u0939\u094b\u0902\u0917\u0947\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930 : \u0924\u094b\u0915\u094d\u092f\u093e \u0939\u092e \u092f\u0939 \u0938\u092e\u091d\u0947\u0902\u0915\u093f \u092a\u0942\u0930\u0940 \u0926\u0941\u0928\u093f\u092f\u093e\u0915\u093e \u0938\u092c\u0938\u0947 \u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u093e \u0939\u092e\u093e\u0930\u093e\u0936\u0939\u091c\u093e\u0926\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0964<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932 : \u091c\u0940\u091c\u0939\u093e\u0902\u092a\u0928\u093e\u0939, \u092e\u0947\u0930\u0940\u092c\u093e\u0924\u094b\u0902 \u0915\u093e \u092f\u0939\u0940\u092e\u0924\u0932\u092c \u0939\u0948\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930: \u092c\u0940\u0930\u092c\u0932 \u0905\u0917\u0930\u0924\u0941\u092e\u094d\u0939\u093e\u0930\u093e \u092f\u0939\u0915\u0939\u0928\u093e \u0939\u0948 \u0915\u093f\u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902\u0936\u0939\u091c\u093e\u0926\u0947 \u0938\u0947 \u092d\u0940\u091c\u094d\u092f\u093e\u0926\u093e\u0916\u0942\u092c\u0938\u0942\u0930\u0924 \u092c\u091a\u094d\u091a\u093e\u0939\u0948, \u0924\u094b \u0924\u0941\u092e \u0909\u0938\u0947\u0939\u092e\u093e\u0930\u0947 \u0938\u092e\u0915\u094d\u0937\u0932\u0947\u0915\u0930 \u0906\u0913\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930 \u0915\u093e \u0906\u0926\u0947\u0936\u0938\u0941\u0928\u0915\u0930 \u092c\u0940\u0930\u092c\u0932\u0936\u0939\u091c\u093e\u0926\u0947 \u0938\u0947 \u092d\u0940\u091c\u094d\u092f\u093e\u0926\u093e \u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u0947 \u0915\u0940 \u0916\u094b\u091c\u092e\u0947\u0902 \u0928\u093f\u0915\u0932 \u091c\u093e\u0924\u093e\u0939\u0948\u0964 \u0915\u0941\u091b \u0926\u093f\u0928\u092c\u0940\u0924\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926\u092c\u0940\u0930\u092c\u0932 \u0930\u093e\u091c\u0926\u0930\u092c\u093e\u0930 \u0906\u0924\u093e \u0939\u0948\u0964\u092c\u0940\u0930\u092c\u0932\u0930\u093e\u091c-\u0926\u0930\u092c\u093e\u0930 \u092e\u0947\u0902\u0905\u0915\u0947\u0932\u0947 \u0906\u0924\u093e \u0939\u0948,\u092f\u0939 \u0926\u0947\u0916 \u0905\u0915\u092c\u0930\u0916\u0941\u0936 \u0939\u094b\u0915\u0930 \u0915\u0939\u0924\u093e\u0939\u0948, &lsquo;\u0915\u094d\u092f\u094b\u0902\u092c\u0940\u0930\u092c\u0932 \u0905\u0915\u0947\u0932\u0947\u0906\u092f\u0947 \u0939\u094b, \u092e\u0924\u0932\u092c\u0924\u0941\u092e\u094d\u0939\u0947\u0902\u0936\u0939\u091c\u093e\u0926\u0947 \u0938\u0947\u0905\u0927\u093f\u0915 \u0916\u0942\u092c\u0938\u0942\u0930\u0924\u092c\u091a\u094d\u091a\u093e \u0928\u0939\u0940\u0902\u092e\u093f\u0932\u093e?&rsquo;<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932 :\u091c\u0939\u093e\u0902\u092a\u0928\u093e\u0939, \u092e\u0948\u0902\u0906\u092a\u0915\u094b \u0907\u0938 \u092c\u093e\u0924\u0915\u0940 \u0938\u0942\u091a\u0928\u093e \u0926\u0947\u0928\u0947\u0906\u092f\u093e \u0939\u0942\u0902 \u0915\u093f\u092e\u0948\u0902\u0928\u0947 \u0936\u0939\u091c\u093e\u0926\u0947\u0938\u0947 \u092d\u0940 \u0905\u0927\u093f\u0915\u0938\u0941\u0902\u0926\u0930 \u092c\u091a\u094d\u091a\u093e\u0916\u094b\u091c \u0932\u093f\u092f\u093e \u0939\u0948\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930 : \u0905\u0917\u0930\u092c\u091a\u094d\u091a\u093e \u092e\u093f\u0932\u0917\u092f\u093e \u0939\u0948, \u0924\u094b \u0924\u0941\u092e\u0909\u0938\u0947 \u0926\u0930\u092c\u093e\u0930\u092e\u0947\u0902 \u0915\u094d\u092f\u094b\u0902\u0928\u0939\u0940\u0902 \u0932\u093e\u090f?<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932 : \u092e\u0948\u0902\u0909\u0938\u0947 \u0926\u0930\u092c\u093e\u0930\u092e\u0947\u0902 \u0932\u0947\u0915\u0930\u0928\u0939\u0940\u0902 \u0906 \u0938\u0915\u0924\u093e\u0939\u0942\u0902, \u0932\u0947\u0915\u093f\u0928\u092e\u0948\u0902 \u0906\u092a\u0915\u094b \u0909\u0938\u0924\u0915 \u0932\u0947\u0915\u0930\u091c\u0930\u0942\u0930 \u091c\u093e\u0938\u0915\u0924\u093e \u0939\u0942\u0902\u0964<\/p>\n\n<p>\u0905\u0915\u092c\u0930 : \u0910\u0938\u093e\u0915\u094c\u0928-\u0938\u093e \u0915\u093e\u0930\u0923\u0939\u0948, \u091c\u093f\u0938\u0915\u0940\u0935\u091c\u0939 \u0938\u0947 \u0924\u0941\u092e\u0909\u0938\u0947 \u0926\u0930\u092c\u093e\u0930\u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0932\u093e\u0938\u0915\u0924\u0947?<\/p>\n\n <p>&nbsp;<\/p>\n\n<p>\u092c\u0940\u0930\u092c\u0932 : \u092f\u0939\u0924\u094b \u0906\u092a\u0915\u094b\u0935\u0939\u093e\u0902\u091c\u093e\u0915\u0930 \u0939\u0940\u092a\u0924\u093e\u091a\u0932\u0947\u0917\u093e\u0964<\/p>\n\n<p>\u0905\u0915\u092c\u0930 :\u0920\u0940\u0915 \u0939\u0948\u092b\u093f\u0930, \u0939\u092e\u0915\u0932 \u0938\u0941\u092c\u0939\u0909\u0938 \u092c\u091a\u094d\u091a\u0947\u0915\u094b \u0926\u0947\u0916\u0928\u0947\u091c\u093e\u090f\u0902\u0917\u0947\u0964<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932:\u091c\u0939\u093e\u0902\u092a\u0928\u093e\u0939,\u0909\u0938\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u0926\u0947\u0916\u0928\u0947\u091c\u093e\u0928\u0947 \u0915\u0947\u0932\u093f\u090f \u0939\u092e\u0947\u092d\u0947\u0937\u092c\u0926\u0932\u0928\u093e\u0939\u094b\u0917\u093e\u0964<\/p>\n\n<p>\u0905\u0915\u092c\u0930:\u0909\u0938\u092c\u091a\u094d\u091a\u0947\u0938\u0947\u092e\u093f\u0932\u0928\u0947\u0915\u0947 \u0932\u093f\u090f\u0939\u092e \u092f\u0939\u092d\u0940 \u0915\u0930\u0932\u0947\u0902\u0917\u0947\u0964<\/p>\n\n <p>\u0905\u0917\u0932\u0947\u0926\u093f\u0928\u0938\u0941\u092c\u0939\u0905\u0915\u092c\u0930\u0914\u0930\u092c\u0940\u0930\u092c\u0932\u092d\u0947\u0937\u092c\u0926\u0932\u0915\u0930\u0909\u0938\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u0926\u0947\u0916\u0928\u0947\u0915\u0947 \u0932\u093f\u090f\u091a\u0932\u0947\u091c\u093e\u0924\u0947\u0939\u0948\u0902\u0964\u092c\u0940\u0930\u092c\u0932\u0905\u0915\u092c\u0930\u0915\u094b \u090f\u0915\u091d\u094b\u092a\u0921\u093c\u0940\u092e\u0947\u0902\u0932\u0947\u0915\u0930\u091c\u093e\u0924\u093e\u0939\u0948,\u091c\u0939\u093e\u0902\u090f\u0915\u091b\u094b\u091f\u093e-\u0938\u093e\u092c\u091a\u094d\u091a\u093e\u092e\u093f\u091f\u094d\u091f\u0940\u0915\u0947 \u0938\u093e\u0925\u0916\u0947\u0932\u0930\u0939\u093e\u0939\u094b\u0924\u093e\u0939\u0948\u0964<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932:\u0909\u0938\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u0926\u093f\u0916\u093e\u0924\u0947\u0939\u0941\u090f\u0915\u0939\u0924\u093e\u0939\u0948 \u0915\u093f\u0935\u094b\u0930\u0939\u093e\u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u093e\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930:\u0924\u0941\u092e\u094d\u0939\u093e\u0930\u0940\u092f\u0939\u0939\u093f\u092e\u094d\u092e\u0924\u0915\u093f\u0924\u0941\u092e\u0928\u0947\u090f\u0915\u092c\u0926\u0938\u0942\u0930\u0924\u0914\u0930\u091d\u094b\u092a\u095c\u0940\u092e\u0947\u0902\u0930\u0939\u0928\u0947\u0935\u093e\u0932\u0947\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u0938\u0902\u0938\u093e\u0930\u0915\u093e\u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u093e\u092c\u0924\u093e\u0926\u093f\u092f\u093e\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930\u0915\u0940\u092c\u093e\u0924\u0947\u0902\u0938\u0941\u0928\u0915\u0930\u092c\u091a\u094d\u091a\u093e\u091c\u094b\u0930-\u091c\u094b\u0930\u0938\u0947\u0930\u094b\u0928\u0947\u0932\u0917\u0924\u093e\u0939\u0948,\u091c\u093f\u0938\u0947\u0938\u0941\u0928\u0915\u0930\u0909\u0938\u0915\u0940\u092e\u093e\u0902\u091d\u094b\u092a\u095c\u0940\u0915\u0947\u0905\u0902\u0926\u0930\u0938\u0947\u0906\u0924\u0940\u0939\u0948\u0914\u0930\u0905\u0915\u092c\u0930\u0915\u094b\u0917\u0941\u0938\u094d\u0938\u0947\u092e\u0947\u0902\u0915\u0939\u0924\u0940\u0939\u0948,&lsquo;\u0924\u0941\u092e\u0928\u0947\u092e\u0947\u0930\u0947\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u092c\u0926\u0938\u0942\u0930\u0924\u0915\u0948\u0938\u0947\u0915\u0939\u0926\u093f\u092f\u093e?\u092e\u0947\u0930\u093e\u092c\u091a\u094d\u091a\u093e\u0938\u0902\u0938\u093e\u0930\u0915\u093e\u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u093e\u0939\u0948\u0964\u0905\u0917\u0930\u0926\u094b\u092c\u093e\u0930\u093e\u092e\u0947\u0930\u0947\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u092c\u0926\u0938\u0942\u0930\u0924\u0915\u0939\u093e,\u0924\u094b\u092e\u0948\u0902\u0924\u0941\u092e\u0926\u094b\u0928\u094b\u0902\u0915\u0940\u0939\u0921\u094d\u0921\u0940-\u092a\u0938\u0932\u0940\u090f\u0915\u0915\u0930\u0926\u0942\u0902\u0917\u0940\u0964\u092f\u0939\u093e\u0902\u0938\u0947\u091a\u0932\u0947\u091c\u093e\u0913\u0914\u0930\u0926\u094b\u092c\u093e\u0930\u093e\u092f\u0939\u093e\u0902\u0926\u093f\u0916\u093e\u0908\u0928\u0939\u0940\u0902\u0926\u0947\u0928\u093e\u0964&rsquo;\u0907\u0924\u0928\u093e\u0915\u0939\u0928\u0947\u0915\u0947\u092c\u093e\u0926\u0935\u094b\u092e\u093e\u0902\u0905\u092a\u0928\u0947\u092c\u091a\u094d\u091a\u0947\u0915\u094b\u0916\u093f\u0932\u093e\u0928\u0947\u0932\u0917\u0924\u0940\u0939\u0948\u0914\u0930\u0915\u0939\u0924\u0940\u0939\u0948,&lsquo;\u092e\u0947\u0930\u093e\u092c\u091a\u094d\u091a\u093e\u0938\u0902\u0938\u093e\u0930\u0915\u093e\u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u093e\u0939\u0948\u0964&rsquo;\u092c\u093e\u0926\u0936\u093e\u0939\u0905\u0915\u092c\u0930\u0909\u0938\u092e\u093e\u0902\u0915\u0940\u092c\u093e\u0924\u0938\u0941\u0928\u0915\u0930\u0916\u093e\u092e\u094b\u0936\u0939\u094b\u091c\u093e\u0924\u0947\u0939\u0948\u0902\u0964<\/p>\n\n <p>\u092c\u0940\u0930\u092c\u0932:\u091c\u0939\u093e\u0902\u092a\u0928\u093e\u0939,\u0905\u092c\u0906\u092a\u0915\u094b\u0938\u092c\u0938\u092e\u091d\u092e\u0947\u0902\u0906\u0917\u092f\u093e\u0939\u094b\u0917\u093e\u0964<\/p>\n\n <p>\u0905\u0915\u092c\u0930:\u0939\u093e\u0902,\u0905\u092c\u092e\u0948\u0902\u0905\u091a\u094d\u091b\u0947\u0938\u0947\u0938\u092e\u091d\u0917\u092f\u093e\u0939\u0942\u0902\u0964<\/p>\n\n<p>\u092c\u0940\u0930\u092c\u0932:\u092c\u093e\u0926\u0936\u093e\u0939\u0905\u0915\u092c\u0930\u092c\u091a\u094d\u091a\u093e\u0915\u0948\u0938\u093e\u092d\u0940\u0939\u094b,\u092e\u093e\u0924\u093e-\u092a\u093f\u0924\u093e\u0915\u0947\u0932\u093f\u090f\u0909\u0928\u0915\u093e\u092c\u091a\u094d\u091a\u093e\u0938\u0902\u0938\u093e\u0930\u0915\u093e\u0938\u092c\u0938\u0947\u0938\u0941\u0902\u0926\u0930\u092c\u091a\u094d\u091a\u093e\u0939\u0940\u0939\u094b\u0924\u093e\u0939\u0948\u0964<\/p>\n\n<p>\u0905\u0915\u092c\u0930:\u092c\u0940\u0930\u092c\u0932\u0924\u0941\u092e\u0938\u0939\u0940\u092c\u094b\u0932\u0930\u0939\u0947\u0939\u094b,\u0939\u0930\u092e\u093e\u0924\u093e-\u092a\u093f\u0924\u093e\u0915\u0947\u0932\u093f\u090f\u0909\u0928\u0915\u093e\u092c\u091a\u094d\u091a\u093e\u0938\u0941\u0902\u0926\u0930\u0939\u094b\u0924\u093e\u0939\u0948\u0964<\/p>\n\n<p>\u092c\u0940\u0930\u092c\u0932:\u091c\u0939\u093e\u0902\u092a\u0928\u093e\u0939,\u092e\u0948\u0902\u092c\u0938\u0907\u0924\u0928\u093e\u091a\u093e\u0939\u0924\u093e\u0939\u0942\u0902\u0915\u093f\u0906\u092a\u0936\u0939\u091c\u093e\u0926\u0947\u0915\u094b\u091a\u093e\u092a\u0932\u0942\u0938\u094b\u0902\u0938\u0947\u0926\u0942\u0930\u0930\u0916\u0915\u0930\u0905\u091a\u094d\u091b\u0940\u0924\u093e\u0932\u0940\u092e\u0926\u0947\u0902\u0964<\/p>\n\n<p>\u0905\u0915\u092c\u0930:\u092c\u0940\u0930\u092c\u0932\u0924\u0941\u092e\u0928\u0947\u090f\u0915\u092c\u093e\u0930\u092b\u093f\u0930\u0939\u092e\u093e\u0930\u093e\u0926\u093f\u0932\u091c\u0940\u0924\u0932\u093f\u092f\u093e\u0964<\/p>\n\n<h4>\u0915\u0939\u093e\u0928\u0940\u0938\u0947\u0938\u0940\u0916:<\/h4>\n\n<p>\u0915\u092d\u0940\u0915\u093f\u0938\u0940\u091a\u0940\u091c\u0915\u094b\u0932\u0947\u0915\u0930\u0918\u092e\u0902\u0921\u0928\u0939\u0940\u0902\u0915\u0930\u0928\u093e\u091a\u093e\u0939\u093f\u090f,\u0915\u094d\u092f\u094b\u0902\u0915\u093f\u090f\u0915\u0928\u090f\u0915\u0926\u093f\u0928\u0935\u094b\u0918\u092e\u0902\u0921\u091f\u0942\u091f\u0924\u093e\u091c\u0930\u0942\u0930\u0939\u0948\u0964<\/p>\n<\/div>\n","uploaded_by":"sharma_sir","user_id":"82","branch":"civil6thsemester","subject":"1","chapter":"1","uploaded_time":"2monthsago","status":"enable","pinned":"no"},{"message":"positive","id":"49","title":"Androidjavacode ","notes_text":"<p>packagecom.chandrapal.manage_college;<\/p>\n\n<p>importandroidx.annotation.Nullable;<br \/>\nimport androidx.appcompat.app.AlertDialog;<br \/>\nimport androidx.appcompat.app.AppCompatActivity;<\/p>\n\n<p>importandroid.content.Intent;<br \/>\nimport android.content.SharedPreferences;<br \/>\nimport android.graphics.Color;<br \/>\nimport android.net.Uri;<br \/>\nimport android.os.Bundle;<br \/>\nimport android.text.Html;<br \/>\nimport android.util.Log;<br \/>\nimport android.view.MotionEvent;<br \/>\nimport android.view.View;<br \/>\nimport android.view.accessibility.AccessibilityManager;<br \/>\nimport android.webkit.WebChromeClient;<br \/>\nimport android.webkit.WebSettings;<br \/>\nimport android.webkit.WebView;<br \/>\nimport android.webkit.WebViewClient;<br \/>\nimport android.widget.Button;<br \/>\nimport android.widget.EditText;<br \/>\nimport android.widget.ProgressBar;<br \/>\nimport android.widget.Spinner;<br \/>\nimport android.widget.TextView;<br \/>\nimport android.widget.Toast;<\/p>\n\n<p>importcom.android.volley.Request;<br \/>\nimport com.android.volley.RequestQueue;<br \/>\nimport com.android.volley.toolbox.StringRequest;<br \/>\nimport com.android.volley.toolbox.Volley;<br \/>\nimport com.google.android.material.appbar.CollapsingToolbarLayout;<br \/>\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;<br \/>\nimport com.google.android.material.textfield.TextInputEditText;<br \/>\nimport com.google.android.material.textfield.TextInputLayout;<\/p>\n\n<p>importorg.json.JSONArray;<\/p>\n\n<p>importjava.io.UnsupportedEncodingException;<br \/>\nimport java.net.URLEncoder;<br \/>\nimport java.util.HashMap;<br \/>\nimport java.util.Map;<br \/>\nimport java.util.Objects;<\/p>\n\n<p>importjp.wasabeef.richeditor.RichEditor;<\/p>\n\n<p>importstaticandroid.content.ContentValues.TAG;<\/p>\n\n<p>publicclassUploadNotesActivityextendsAppCompatActivity{<\/p>\n\n<p>&nbsp;&nbsp;WebViewwebView;<br \/>\n&nbsp; &nbsp; String WEB_URL_FORM_UPLOAD_NOTES_ANDROID = &quot;http:\/\/schoolmanagementsystem.epizy.com\/ck_editor_for_android.php&quot;;<br \/>\n&nbsp; &nbsp; String WEB_URL_FORM_UPLOAD_NOTES_ANDROID_000WEBHOST = &quot;https:\/\/manage-college.000webhostapp.com\/form_upload_notes_android.php&quot;;<br \/>\n&nbsp; &nbsp; String WEB_URL_INSERT_NOTES = &quot;https:\/\/manage-college.000webhostapp.com\/insert_notes.php&quot;;<br \/>\n&nbsp; &nbsp; @Override<br \/>\n&nbsp; &nbsp; protected void onCreate(Bundle savedInstanceState) {<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; super.onCreate(savedInstanceState);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; setContentView(R.layout.activity_upload_notes);<\/p>\n\n<p>\/\/&nbsp;&nbsp;&nbsp;&nbsp;Objects.requireNonNull(getSupportActionBar()).hide();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Spinnerspinner_branches=findViewById(R.id.spinner_branches_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; Spinner spinner_subject = findViewById(R.id.spinner_subjects_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; Spinner spinner_chapter = findViewById(R.id.spinner_chapters_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; TextInputEditText editText_title = findViewById(R.id.title_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; TextInputEditText editText_notes = findViewById(R.id.notes_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; TextView ckeditor_link = findViewById(R.id.textview_link_of_ckeditor_online_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; Button upload_button = findViewById(R.id.submit_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; ProgressBar upload_progressbar = findViewById(R.id.upload_progressbar_upload_notes);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;WebViewwebView=findViewById(R.id.web_view_activity_upload_notes);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Buttonopen_in_web_view=findViewById(R.id.button_open_in_web_view_upload_notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; Button open_in_web_browser = findViewById(R.id.button_open_in_web_browser_upload_notes);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;open_in_web_view.setOnClickListener(v-&gt;{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Intent intent = new Intent(this, WebViewActivity.class);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; intent.putExtra(&quot;link&quot;, WEB_URL_FORM_UPLOAD_NOTES_ANDROID);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startActivity(intent);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; });<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;open_in_web_browser.setOnClickListener(v-&gt;{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;, Uri.parse(WEB_URL_FORM_UPLOAD_NOTES_ANDROID));<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startActivity(intent);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; });<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;SharedPreferencessharedPreferences=getSharedPreferences(&quot;loginInfo&quot;,MODE_PRIVATE);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;if(sharedPreferences.contains(&quot;userType&quot;)&amp;&amp;sharedPreferences.contains(&quot;username&quot;)){<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sharedPreferences.getString(&quot;userType&quot;,&quot;&quot;).equals(&quot;student&quot;)){<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newMaterialAlertDialogBuilder(UploadNotesActivity.this)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setTitle(&quot;Server response&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setMessage(&quot;You are a student, You cannot upload notes!&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setCancelable(false)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setPositiveButton(&quot;Ok&quot;,(dialog, which) -&gt; {<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startActivity(new Intent(getApplicationContext(), MainActivity.class));<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; finish();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; onBackPressed();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;}else{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new MaterialAlertDialogBuilder(UploadNotesActivity.this)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setTitle(&quot;Server response&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setMessage(&quot;You are not logged in, You have to login to upload notes!&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setCancelable(false)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setPositiveButton(&quot;Login now&quot;,(dialog, which) -&gt; {<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startActivity(new Intent(getApplicationContext(), LoginActivity.class));<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; finish();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setNegativeButton(&quot;Not now&quot;, (dialog, which) -&gt; {<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startActivity(new Intent(getApplicationContext(), MainActivity.class));<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; finish();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; onBackPressed();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .show();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; }<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;webView.loadUrl(WEB_URL_FORM_UPLOAD_NOTES_ANDROID);<\/p>\n\n<p><br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webView.setWebChromeClient(new WebChromeClient());<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webView.setWebViewClient(new WebViewClient());<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webView.clearCache(true);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webView.clearHistory();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webView.requestDisallowInterceptTouchEvent(true);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;WebSettingswebSettings=webView.getSettings();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webSettings.setJavaScriptEnabled(true);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; webSettings.setJavaScriptCanOpenWindowsAutomatically(true);<\/p>\n\n<p><br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; ckeditor_link.setText(&quot;Write notes here. Then click on source and copy it and paste in the above editext. You can include images, videos, links, pdf etc. Or You can also use simple html tags in above edittext like h1, h2, h3 for heading, p for paragraph, br for line break,, hr for horizontal line. For advance notes upload from website&quot;);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;upload_button.setOnClickListener(v-&gt;{<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sharedPreferences.contains(&quot;username&quot;)){<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stringbranch=spinner_branches.getSelectedItem().toString();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String subject = spinner_subject.getSelectedItem().toString();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String chapter = spinner_chapter.getSelectedItem().toString();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String notes = Objects.requireNonNull(editText_notes.getText()).toString();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String title = Objects.requireNonNull(editText_title.getText()).toString();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String sessionUsername = sharedPreferences.getString(&quot;username&quot;, &quot;&quot;);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String sessionUserId = sharedPreferences.getString(&quot;id&quot;, &quot;&quot;);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!title.equals(&quot;&quot;)&amp;&amp;!notes.equals(&quot;&quot;)&amp;&amp;!branch.equals(&quot;Choosebranch&quot;)&amp;&amp;!subject.equals(&quot;Choosesubject&quot;)&amp;&amp;!chapter.equals(&quot;Choosechapter&quot;)){<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_progressbar.setVisibility(View.VISIBLE);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringRequeststringRequest=newStringRequest(Request.Method.POST,WEB_URL_INSERT_NOTES,response-&gt;{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; upload_progressbar.setVisibility(View.GONE);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Toast.makeText(UploadNotesActivity.this,response,Toast.LENGTH_LONG).show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JSONArray jsonArray = new JSONArray(response);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String message = jsonArray.getJSONObject(0).getString(&quot;message&quot;);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String messageFull = jsonArray.getJSONObject(0).getString(&quot;message_full&quot;);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Toast.makeText(UploadNotesActivity.this,messageFull,Toast.LENGTH_SHORT).show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(message.equals(&quot;success&quot;)){<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newMaterialAlertDialogBuilder(UploadNotesActivity.this)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setTitle(&quot;Notes uploaded successfully&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setMessage(&quot;See in notes page&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setPositiveButton(&quot;Ok&quot;, \/* listener = *\/ null)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Toast.makeText(UploadNotesActivity.this, &quot;could not save changes, please try again&quot;, Toast.LENGTH_LONG).show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newMaterialAlertDialogBuilder(UploadNotesActivity.this)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setTitle(&quot;Connection error&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setMessage(&quot;Could not connect to the server, Make sure you are connected to the internet&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setCancelable(true)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setPositiveButton(&quot;Ok&quot;, \/* listener = *\/ null)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},error-&gt;{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; upload_progressbar.setVisibility(View.GONE);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Toast.makeText(UploadNotesActivity.this, error.toString().trim(), Toast.LENGTH_LONG).show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newMaterialAlertDialogBuilder(UploadNotesActivity.this)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setTitle(&quot;Connection error&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setMessage(&quot;Could not connect to the server, Make sure you are connected to the internet, if your internet is working fine then that may be server error.&quot;)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .setPositiveButton(&quot;Ok&quot;, \/* listener = *\/ null)<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .show();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}){<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Nullable<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @org.jetbrains.annotations.Nullable<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; protected Map&lt;String, String&gt; getParams() {<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Map&lt;String, String&gt; data = new HashMap&lt;&gt;();<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.put(&quot;uploaded_by&quot;,sessionUsername);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data.put(&quot;user_id&quot;, sessionUserId);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data.put(&quot;title&quot;, title);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data.put(&quot;notes_text&quot;, notes);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data.put(&quot;branch&quot;, branch);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data.put(&quot;subject&quot;, subject);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data.put(&quot;chapter&quot;, chapter);<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returndata;<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RequestQueue requestQueue = Volley.newRequestQueue(UploadNotesActivity.this);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; requestQueue.add(stringRequest);<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Toast.makeText(UploadNotesActivity.this, &quot;All fields are required&quot;, Toast.LENGTH_LONG).show();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Toast.makeText(UploadNotesActivity.this, &quot;You are not logged in&quot;, Toast.LENGTH_SHORT).show();<br \/>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;});<\/p>\n\n<p><br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; RichEditor editor = findViewById(R.id.rich_editor_upload_notes);<br \/>\n\/\/<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; editor.setEditorHeight(300);<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; editor.setEditorFontSize(22);<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; editor.setEditorFontColor(Color.RED);<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; editor.setPadding(10, 10, 10, 10);<br \/>\n\/\/&nbsp; &nbsp; &nbsp; &nbsp; editor.setPlaceholder(&quot;Insert text here...&quot;);<br \/>\n&nbsp; &nbsp; }<\/p>\n\n<p>}<\/p>\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs6thsemester","subject":"9","chapter":"9","uploaded_time":"2monthsago","status":"enable","pinned":"no"},{"message":"positive","id":"48","title":"InsertinganewnodeinalinkedlistinC.","notes_text":"<divstyle=\"background:#eeeeee;border-radius:20px;border:1pxsolid#cccccc;padding:5px10px\">\r\n<pre>\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n\r\nstruct node\r\n{\r\n    int data;\r\n    struct node *next;\r\n};\r\n\r\nint main()\r\n{\r\n    struct node *prev,*head,*p;\r\n    int n,i;\r\n    printf (&quot;number of elements:&quot;);\r\n    scanf(&quot;%d&quot;,&amp;n);\r\n    head=NULL;\r\n    for(i=0;i&lt;n;i++)\r\n    {\r\n        p=malloc(sizeof(struct node));\r\n        scanf(&quot;%d&quot;,&amp;p-&gt;data);\r\n        p-&gt;next=NULL;\r\n        if(head==NULL)\r\n            head=p;\r\n        else\r\n            prev-&gt;next=p;\r\n        prev=p;\r\n    }\r\n    return 0;\r\n}<\/pre>\r\n<\/div>\r\n\r\n<p>There are three different possibilities for inserting a node into a linked list. These three possibilities are:<\/p>\r\n\r\n<ol>\r\n\t<li>Insertion at the beginning of the list.<\/li>\r\n\t<li>Insertion at the end of the list<\/li>\r\n\t<li>Inserting a new node except the above-mentioned positions.<\/li>\r\n<\/ol>\r\n\r\n<p>In the first case, we make a new node and points its next to the head of the existing list and then change the head to the newly added node. It is similar to picture given below.<\/p>\r\n\r\n<p><img alt=\"Insertion at beginning\" src=\"https:\/\/www.dl.dropboxusercontent.com\/s\/gm4uzjcrdwyz0ck\/insertion_at_beg.jpg\" style=\"width:100%\" \/><\/p>\r\n\r\n<p>So, the steps to be followed are as follows:<\/p>\r\n\r\n<ol>\r\n\t<li>Make a new node<\/li>\r\n\t<li>Point the &lsquo;next&rsquo; of the new node to the &lsquo;head&rsquo; of the linked list.<\/li>\r\n\t<li>Mark new node as &lsquo;head&rsquo;.<\/li>\r\n<\/ol>\r\n\r\n<p>Thus, the code representing the above steps is:<\/p>\r\n\r\n<div style=\"background:#eeeeee; border-radius:20px; border:1px solid #cccccc; padding:5px 10px\">\r\n<pre>\r\nstruct node* front(struct node *head,int value)\r\n{\r\n\tstruct node *p;\r\n\tp=malloc(sizeof(struct node));\r\n\tp-&gt;data=value;\r\n\tp-&gt;next=head;\r\n\treturn (p);\r\n}\r\n\r\n\/*\r\nmain funtion will be something like:\r\nmain()\r\n{\r\n    head=front(head,10);\r\n}\r\n*\/<\/pre>\r\n<\/div>\r\n\r\n<p>The code is very simple to understand. We just made a new node in these three lines of the code:<\/p>\r\n\r\n<p><code>struct node *p;<br \/>\r\np=malloc(<\/code><code>sizeof<\/code><code>(struct node));<br \/>\r\np-&gt;data=value;<\/code><\/p>\r\n\r\n<p><code>p-&gt;next=head<\/code>&nbsp;&ndash; In this line, we have followed the second step which is to point the &lsquo;next&rsquo; of the new node to the head of the linked list.<\/p>\r\n\r\n<p><code>return (p);<br \/>\r\nhead=front(head,10);<\/code><\/p>\r\n\r\n<p>These two lines are the part of marking the new node as &lsquo;head&rsquo;. We are returning the new node from our function and making it head in the main function.<\/p>\r\n\r\n<p>The second case is the simplest one. We just add a new node at the end of the existing list. It is shown in the picture given below:<\/p>\r\n\r\n<p><img alt=\"Insertion at the end\" src=\"https:\/\/dl.dropboxusercontent.com\/s\/jlv54ricgeytj1m\/insertion_at_end.jpg?dl=0\" style=\"width:100%\" \/><\/p>\r\n\r\n<p>So, the steps to add the end if a linked list are:<\/p>\r\n\r\n<ol>\r\n\t<li>Make a new node<\/li>\r\n\t<li>Point the last node of the linked list to the new node<\/li>\r\n<\/ol>\r\n\r\n<p>And the code representing the above steps are:<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<pre>\r\nend(struct node *head,int value)\r\n{\r\n    struct node *p,*q;\r\n    p=malloc(sizeof(struct node));\r\n    p-&gt;data=value;\r\n    p-&gt;next=NULL;\r\n    q=head;\r\n    while(q-&gt;next!=NULL)\r\n    {\r\n        q = q-&gt;next;\r\n    }\r\n    q-&gt;next = p;\r\n}\r\n\/*\r\n    main function will contain something like:\r\n    end(head,20);\r\n*\/<\/pre>\r\n<\/div>\r\n\r\n<p><code>p=malloc(<\/code><code>sizeof<\/code><code>(struct node));<br \/>\r\np-&gt;data=value;<br \/>\r\np-&gt;next=NULL;<\/code><\/p>\r\n\r\n<p>The above-mentioned lines are just creating a new node.<\/p>\r\n\r\n<p><code>while(q-&gt;next!=NULL)<br \/>\r\n{<br \/>\r\n&nbsp;q = q-&gt;next;<br \/>\r\n}<\/code><\/p>\r\n\r\n<p>We are traversing to the end of the list using the above lines of code to make &lsquo;q&rsquo; the last element of the list.<\/p>\r\n\r\n<p>Now&nbsp;&lsquo;q&rsquo; &nbsp;is the last element of the list, so we can add the new node next to it and we are doing the same by the code written after the while loop:<\/p>\r\n\r\n<p><code>q = q-&gt;next<\/code><\/p>\r\n\r\n<p>The third and the last case is a little bit complicated. To insert a node in between a linked list, we need to first&nbsp;break the existing link and then create two new links. It will be clear from the picture given below.<\/p>\r\n\r\n<p><img alt=\"Inserting a node in between a linked list\" src=\"https:\/\/www.dl.dropboxusercontent.com\/s\/6uzvk0ofg4i224f\/insertion_in_between.jpg\" style=\"width:100%\" \/><\/p>\r\n\r\n<p>The steps for inserting a node after node &lsquo;a&rsquo; (as shown in the picture) are:<\/p>\r\n\r\n<ol>\r\n\t<li>Make a new node<\/li>\r\n\t<li>Point the &lsquo;next&rsquo; of the new node to the node &lsquo;b&rsquo; (the node after which we have to insert the new node). Till now, two nodes are pointing the&nbsp;same node &lsquo;b&rsquo;, the node &lsquo;a&rsquo; and the new node.<br \/>\r\n\t<img alt=\"inserting a node in between a linked list\" src=\"https:\/\/www.dl.dropboxusercontent.com\/s\/1k7m89c2k1xj9rr\/Untitled-3.jpg?dl=0\" \/><\/li>\r\n\t<li>Point the &lsquo;next&rsquo; of &lsquo;a&rsquo; to the new node.<\/li>\r\n<\/ol>\r\n\r\n<p>The code for the above steps is:<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<pre>\r\nafter(struct node *a, int value)\r\n{\r\n    struct node *p;\r\n    p = malloc(sizeof(struct node));\r\n    p-&gt;data = value;\r\n    \/*\r\n    if initial linked list is\r\n     _______        _______        _______ \r\n    |   1   |____\\ |   3   |____\\ |   5   |____\\ NULL\r\n    |_______|    \/ |_______|    \/ |_______|    \/ \r\n    and new node&#39;s value is 10\r\n    then the next line will do something like\r\n     _______        _______        _______ \r\n    |   1   |____\\ |   3   |____\\ |   5   |____\\ NULL\r\n    |_______|    \/ |_______|    \/ |_______|    \/ \r\n                    \/ \\\r\n                     |\r\n                     |\r\n                  ___|___\r\n                 |   10  |\r\n                 |_______|\r\n    *\/\r\n    p-&gt;next = a-&gt;next;\r\n    a-&gt;next = p;\r\n&nbsp;   \/*\r\n    now the linked list will look like:\r\n    &nbsp;_______ &nbsp; &nbsp; &nbsp;&nbsp;_______ &nbsp; &nbsp; &nbsp; &nbsp;_______ &nbsp; &nbsp; &nbsp; &nbsp;_______&nbsp;\r\n&nbsp; &nbsp; | &nbsp; 1 &nbsp; |____\\| &nbsp; 10&nbsp; |____\\&nbsp;| &nbsp; 3 &nbsp; |____\\ | &nbsp; 5 &nbsp; |____\\ NULL\r\n&nbsp; &nbsp; |_______| &nbsp; &nbsp;\/|_______| &nbsp; &nbsp;\/&nbsp;|_______| &nbsp; &nbsp;\/ |_______| &nbsp; &nbsp;\/&nbsp;\r\n&nbsp;   *\/\r\n}<\/pre>\r\n<\/div>\r\n\r\n<p><code>p = malloc(sizeof(struct node));<br \/>\r\np-&gt;data = value;<\/code><\/p>\r\n\r\n<p>We are creating a new node using the above lines.<\/p>\r\n\r\n<p><code>p-&gt;next = a-&gt;next<\/code>&nbsp;&ndash; We are making the &lsquo;next&rsquo; of the new node to point to the node after which insertion is to be made. See the comments for better understanding.<\/p>\r\n\r\n<p><code>a-&gt;next = p<\/code>&nbsp;&ndash; We are pointing the &lsquo;next&rsquo; of a to the new node.<\/p>\r\n\r\n<p>The entire code is:<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<pre>\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n\r\nstruct node\r\n{\r\n    int data;\r\n    struct node *next;\r\n};\r\n\r\ndisplay(struct node *head)\r\n{\r\n    if(head == NULL)\r\n    {\r\n        printf(&quot;NULL\\n&quot;);\r\n    }\r\n    else\r\n    {\r\n        printf(&quot;%d\\n&quot;, head -&gt; data);\r\n        display(head-&gt;next);\r\n    }\r\n}\r\n\r\nstruct node* front(struct node *head,int value)\r\n{\r\n    struct node *p;\r\n    p=malloc(sizeof(struct node));\r\n    p-&gt;data=value;\r\n    p-&gt;next=head;\r\n    return (p);\r\n}\r\n\r\nend(struct node *head,int value)\r\n{\r\n    struct node *p,*q;\r\n    p=malloc(sizeof(struct node));\r\n    p-&gt;data=value;\r\n    p-&gt;next=NULL;\r\n    q=head;\r\n    while(q-&gt;next!=NULL)\r\n    {\r\n        q = q-&gt;next;\r\n    }\r\n    q-&gt;next = p;\r\n}\r\n\r\nafter(struct node *a, int value)\r\n{\r\n    if (a-&gt;next != NULL)\r\n    {\r\n        struct node *p;\r\n        p = malloc(sizeof(struct node));\r\n        p-&gt;data = value;\r\n        \/*\r\n        if initial linked list is\r\n         _______        _______        _______ \r\n        |   1   |____\\ |   3   |____\\ |   5   |____\\ NULL\r\n        |_______|    \/ |_______|    \/ |_______|    \/ \r\n        and new node&#39;s value is 10\r\n        then the next line will do something like\r\n         _______        _______        _______ \r\n        |   1   |____\\ |   3   |____\\ |   5   |____\\ NULL\r\n        |_______|    \/ |_______|    \/ |_______|    \/ \r\n                        \/ \\\r\n                         |\r\n                         |\r\n                      ___|___\r\n                     |   10  |\r\n                     |_______|\r\n        *\/\r\n        p-&gt;next = a-&gt;next;\r\n        a-&gt;next = p;\r\n    }\r\n    else\r\n    {\r\n        printf(&quot;Use end function to insert at the end\\n&quot;);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    struct node *prev,*head, *p;\r\n    int n,i;\r\n    printf (&quot;number of elements:&quot;);\r\n    scanf(&quot;%d&quot;,&amp;n);\r\n    head=NULL;\r\n    for(i=0;i&lt;n;i++)\r\n    {\r\n        p=malloc(sizeof(struct node));\r\n        scanf(&quot;%d&quot;,&amp;p-&gt;data);\r\n        p-&gt;next=NULL;\r\n        if(head==NULL)\r\n            head=p;\r\n        else\r\n            prev-&gt;next=p;\r\n        prev=p;\r\n    }\r\n    head = front(head,10);\r\n    end(head,20);\r\n    after(head-&gt;next-&gt;next,30);\r\n    display(head);\r\n    return 0;\r\n}\r\n<\/pre>\r\n<\/div>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs 6th semester","subject":"1","chapter":"3","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"47","title":"C Program to reverse number","notes_text":"<p>We can reverse&#39;s a number in c using loop and arithmetic operators. In this program, we are getting number as input from the user and reversing that number. Let see a simple c example to reverse a given number.<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<p>&nbsp; &nbsp; #include&lt;stdio.h&gt;&nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp;int main()&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; {&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; int n, reverse=0, rem;&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; printf(&quot;Enter a number: &quot;);&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; scanf(&quot;%d&quot;, &amp;n);&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; while(n!=0)&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; {&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rem=n%10;&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;reverse=reverse*10+rem;&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;n\/=10;&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; }&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; &nbsp; printf(&quot;Reversed Number: %d&quot;,reverse);&nbsp; &nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; return 0;&nbsp;&nbsp;<br \/>\r\n&nbsp; &nbsp; }&nbsp; &nbsp;<\/p>\r\n<\/div>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p>Output:<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<p>Enter a number: 123<br \/>\r\nReversed Number: 321<\/p>\r\n<\/div>\r\n","uploaded_by":"sharma_sir","user_id":"82","branch":"civil 2nd semester","subject":"2","chapter":"3","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"46","title":"scheduling algorithms","notes_text":"<p>A Process Scheduler schedules different processes to be assigned to the CPU based on particular scheduling algorithms. There are six popular process scheduling algorithms which we are going to discuss in this chapter &minus;<\/p>\r\n\r\n<ul>\r\n\t<li>First-Come, First-Served (FCFS) Scheduling<\/li>\r\n\t<li>Shortest-Job-Next (SJN) Scheduling<\/li>\r\n\t<li>Priority Scheduling<\/li>\r\n\t<li>Shortest Remaining Time<\/li>\r\n\t<li>Round Robin(RR) Scheduling<\/li>\r\n\t<li>Multiple-Level Queues Scheduling<\/li>\r\n<\/ul>\r\n\r\n<p>These algorithms are either&nbsp;non-preemptive or preemptive. Non-preemptive algorithms are designed so that once a process enters the running state, it cannot be preempted until it completes its allotted time, whereas the preemptive scheduling is based on priority where a scheduler may preempt a low priority running process anytime when a high priority process enters into a ready state.<\/p>\r\n\r\n<h2>First Come First Serve (FCFS)<\/h2>\r\n\r\n<ul>\r\n\t<li>Jobs are executed on first come, first serve basis.<\/li>\r\n\t<li>It is a non-preemptive, pre-emptive scheduling algorithm.<\/li>\r\n\t<li>Easy to understand and implement.<\/li>\r\n\t<li>Its implementation is based on FIFO queue.<\/li>\r\n\t<li>Poor in performance as average wait time is high.<\/li>\r\n<\/ul>\r\n\r\n<p><img alt=\"First Come First Serve Scheduling Algorithm\" src=\"https:\/\/www.tutorialspoint.com\/operating_system\/images\/fcfs.jpg\" \/><\/p>\r\n\r\n<p>Wait time&nbsp;of each process is as follows &minus;<\/p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Process<\/th>\r\n\t\t\t<th>Wait Time : Service Time - Arrival Time<\/th>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P0<\/td>\r\n\t\t\t<td>0 - 0 = 0<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P1<\/td>\r\n\t\t\t<td>5 - 1 = 4<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P2<\/td>\r\n\t\t\t<td>8 - 2 = 6<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P3<\/td>\r\n\t\t\t<td>16 - 3 = 13<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p>Average Wait Time: (0+4+6+13) \/ 4 = 5.75<\/p>\r\n\r\n<h2>Shortest Job Next (SJN)<\/h2>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>This is also known as&nbsp;shortest job first, or SJF<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>This is a non-preemptive, pre-emptive scheduling algorithm.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Best approach to minimize waiting time.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Easy to implement in Batch systems where required CPU time is known in advance.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Impossible to implement in interactive systems where required CPU time is not known.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>The processer should know in advance how much time process will take.<\/p>\r\n\t<\/li>\r\n<\/ul>\r\n\r\n<p>Given: Table of processes, and their Arrival time, Execution time<\/p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Process<\/th>\r\n\t\t\t<th>Arrival Time<\/th>\r\n\t\t\t<th>Execution Time<\/th>\r\n\t\t\t<th>Service Time<\/th>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P0<\/td>\r\n\t\t\t<td>0<\/td>\r\n\t\t\t<td>5<\/td>\r\n\t\t\t<td>0<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P1<\/td>\r\n\t\t\t<td>1<\/td>\r\n\t\t\t<td>3<\/td>\r\n\t\t\t<td>5<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P2<\/td>\r\n\t\t\t<td>2<\/td>\r\n\t\t\t<td>8<\/td>\r\n\t\t\t<td>14<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P3<\/td>\r\n\t\t\t<td>3<\/td>\r\n\t\t\t<td>6<\/td>\r\n\t\t\t<td>8<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p><img alt=\"Shortest Job First Scheduling Algorithm\" src=\"https:\/\/www.tutorialspoint.com\/operating_system\/images\/shortest_job_first.jpg\" \/><\/p>\r\n\r\n<p>Waiting time&nbsp;of each process is as follows &minus;<\/p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Process<\/th>\r\n\t\t\t<th>Waiting Time<\/th>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P0<\/td>\r\n\t\t\t<td>0 - 0 = 0<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P1<\/td>\r\n\t\t\t<td>5 - 1 = 4<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P2<\/td>\r\n\t\t\t<td>14 - 2 = 12<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P3<\/td>\r\n\t\t\t<td>8 - 3 = 5<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p>Average Wait Time: (0 + 4 + 12 + 5)\/4 = 21 \/ 4 = 5.25<\/p>\r\n\r\n<h2>Priority Based Scheduling<\/h2>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>Priority scheduling is a non-preemptive algorithm and one of the most common scheduling algorithms in batch systems.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Each process is assigned a priority. Process with highest priority is to be executed first and so on.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Processes with same priority are executed on first come first served basis.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Priority can be decided based on memory requirements, time requirements or any other resource requirement.<\/p>\r\n\t<\/li>\r\n<\/ul>\r\n\r\n<p>Given: Table of processes, and their Arrival time, Execution time, and priority. Here we are considering 1 is the lowest priority.<\/p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Process<\/th>\r\n\t\t\t<th>Arrival Time<\/th>\r\n\t\t\t<th>Execution Time<\/th>\r\n\t\t\t<th>Priority<\/th>\r\n\t\t\t<th>Service Time<\/th>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P0<\/td>\r\n\t\t\t<td>0<\/td>\r\n\t\t\t<td>5<\/td>\r\n\t\t\t<td>1<\/td>\r\n\t\t\t<td>0<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P1<\/td>\r\n\t\t\t<td>1<\/td>\r\n\t\t\t<td>3<\/td>\r\n\t\t\t<td>2<\/td>\r\n\t\t\t<td>11<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P2<\/td>\r\n\t\t\t<td>2<\/td>\r\n\t\t\t<td>8<\/td>\r\n\t\t\t<td>1<\/td>\r\n\t\t\t<td>14<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P3<\/td>\r\n\t\t\t<td>3<\/td>\r\n\t\t\t<td>6<\/td>\r\n\t\t\t<td>3<\/td>\r\n\t\t\t<td>5<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p><img alt=\"Priority Scheduling Algorithm\" src=\"https:\/\/www.tutorialspoint.com\/operating_system\/images\/priority_scheduling_algorithm.jpg\" \/><\/p>\r\n\r\n<p>Waiting time&nbsp;of each process is as follows &minus;<\/p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Process<\/th>\r\n\t\t\t<th>Waiting Time<\/th>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P0<\/td>\r\n\t\t\t<td>0 - 0 = 0<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P1<\/td>\r\n\t\t\t<td>11 - 1 = 10<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P2<\/td>\r\n\t\t\t<td>14 - 2 = 12<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P3<\/td>\r\n\t\t\t<td>5 - 3 = 2<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p>Average Wait Time: (0 + 10 + 12 + 2)\/4 = 24 \/ 4 = 6<\/p>\r\n\r\n<h2>Shortest Remaining Time<\/h2>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>Shortest remaining time (SRT) is the preemptive version of the SJN algorithm.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>The processor is allocated to the job closest to completion but it can be preempted by a newer ready job with shorter time to completion.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Impossible to implement in interactive systems where required CPU time is not known.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>It is often used in batch environments where short jobs need to give preference.<\/p>\r\n\t<\/li>\r\n<\/ul>\r\n\r\n<h2>Round Robin Scheduling<\/h2>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>Round Robin is the preemptive process scheduling algorithm.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Each process is provided a fix time to execute, it is called a&nbsp;quantum.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Once a process is executed for a given time period, it is preempted and other process executes for a given time period.<\/p>\r\n\t<\/li>\r\n\t<li>\r\n\t<p>Context switching is used to save states of preempted processes.<\/p>\r\n\t<\/li>\r\n<\/ul>\r\n\r\n<p><img alt=\"Round Robin Scheduling Algorithm\" src=\"https:\/\/www.tutorialspoint.com\/operating_system\/images\/round_robin.jpg\" \/><\/p>\r\n\r\n<p>Wait time&nbsp;of each process is as follows &minus;<\/p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Process<\/th>\r\n\t\t\t<th>Wait Time : Service Time - Arrival Time<\/th>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P0<\/td>\r\n\t\t\t<td>(0 - 0) + (12 - 3) = 9<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P1<\/td>\r\n\t\t\t<td>(3 - 1) = 2<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P2<\/td>\r\n\t\t\t<td>(6 - 2) + (14 - 9) + (20 - 17) = 12<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>P3<\/td>\r\n\t\t\t<td>(9 - 3) + (17 - 12) = 11<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p>Average Wait Time: (9+2+12+11) \/ 4 = 8.5<\/p>\r\n\r\n<h2>Multiple-Level Queues Scheduling<\/h2>\r\n\r\n<p>Multiple-level queues are not an independent scheduling algorithm. They make use of other existing algorithms to group and schedule jobs with common characteristics.<\/p>\r\n\r\n<ul>\r\n\t<li>Multiple queues are maintained for processes with common characteristics.<\/li>\r\n\t<li>Each queue can have its own scheduling algorithms.<\/li>\r\n\t<li>Priorities are assigned to each queue.<\/li>\r\n<\/ul>\r\n\r\n<p>For example, CPU-bound jobs can be scheduled in one queue and all I\/O-bound jobs in another queue. The Process Scheduler then alternately selects jobs from each queue and assigns them to the CPU based on the algorithm assigned to the queue.<\/p>\r\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 3rd semester","subject":"3","chapter":"4","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"44","title":"Applet","notes_text":"<p>Let&rsquo;s understand first how many Package does GUI support:<\/p>\n\n<ol>\n\t<li>AWT(Abstract Window Toolkit)<\/li>\n\t<li>Swing<\/li>\n<\/ol>\n\n<p><strong>Throwback of making GUI application:<\/strong><\/p>\n\n<p>Java was launched on 23-Jan-1996(JDK 1.0) and at that time it only supported CUI(Character User Interface) application. But in 1996 VB(Visual Basic) of Microsoft was preferred for GUI programming. So the Java developers in hurry(i.e within 7 days) have given the support for GUI from Operating System(OS). Now, the components like button,etc. were platform-dependent(i.e in each platform there will be different size, shape button). But they did the intersection of such components from all platforms and gave a small library which contains these intersections and it is available in AWT(Abstract Window Toolkit) technology but it doesn&rsquo;t have advanced features like dialogue box, etc.<\/p>\n\n<p>Now to run Applet, java needs a browser and at that time only &ldquo;Internet Explorer&rdquo; was there of Microsoft but Microsoft believes in monopoly. So &ldquo;SUN Micro-System&rdquo;(the company which developed Java) contracted with other company known as &ldquo;Netscape&rdquo;(which developed Java Script) and now the &ldquo;Netscape&rdquo; company is also known as &ldquo;Mozilla Firefox&rdquo; which we all know is a browser. Now, these two companies have developed a technology called &ldquo;SWING&rdquo; and the benefit is that the SWING components are produced by Java itself. Therefore now it is platform-independent as well as some additional features have also been added which were not in AWT technology. So we can say that SWING is much more advanced as compared to AWT technology.<\/p>\n\n<p><strong>What is Applet?<\/strong><br \/>\nAn applet is a Java program that can be embedded into a web page. It runs inside the web browser and works at client side. An applet is embedded in an HTML page using the APPLET or OBJECT tag and hosted on a web server.<\/p>\n\n<p><br \/>\n&nbsp;<\/p>\n\n<p>Applets are used to make the web site more dynamic and entertaining.<\/p>\n\n<p><strong>Important points :<\/strong><\/p>\n\n<ol>\n\t<li>All applets are sub-classes (either directly or indirectly) of&nbsp;<em><a href=\"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/applet\/Applet.html\" target=\"_blank\">java.applet.Applet<\/a><\/em>&nbsp;class.<\/li>\n\t<li>Applets are not stand-alone programs. Instead, they run within either a web browser or an applet viewer. JDK provides a standard applet viewer tool called applet viewer.<\/li>\n\t<li>In general, execution of an applet does not begin at main() method.<\/li>\n\t<li>Output of an applet window is not performed by&nbsp;<em>System.out.println()<\/em>. Rather it is handled with various AWT methods, such as&nbsp;<em>drawString()<\/em>.<\/li>\n<\/ol>\n\n<p><strong>Life cycle of an applet :<\/strong><\/p>\n\n<p><img alt=\"\" src=\"https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/Java-Applet-Lifecycle.png\" style=\"height:300px; width:250px\" \/><\/p>\n\n<p>It is important to understand the order in which the various methods shown in the above image are called. When an applet begins, the following methods are called, in this sequence:<\/p>\n\n<ol>\n\t<li>init( )<\/li>\n\t<li>start( )<\/li>\n\t<li>paint( )<\/li>\n<\/ol>\n\n<p>When an applet is terminated, the following sequence of method calls takes place:<\/p>\n\n<ol>\n\t<li>stop( )<\/li>\n\t<li>destroy( )<\/li>\n<\/ol>\n\n<p>Let&rsquo;s look more closely at these methods.<\/p>\n\n<ol>\n\t<li><strong>init( ) :&nbsp;<\/strong>The&nbsp;<strong>init( )<\/strong>&nbsp;method is the first method to be called. This is where you should initialize variables. This method is called&nbsp;<strong>only once<\/strong>&nbsp;during the run time of your applet.<\/li>\n\t<li><strong>start( ) :&nbsp;<\/strong>The&nbsp;<strong>start( )<\/strong>&nbsp;method is called after&nbsp;<strong>init( )<\/strong>. It is also called to restart an applet after it has been stopped. Note that&nbsp;<strong>init( )&nbsp;<\/strong>is called once i.e. when the first time an applet is loaded whereas&nbsp;<strong>start( )<\/strong>&nbsp;is called each time an applet&rsquo;s HTML document is displayed onscreen. So, if a user leaves a web page and comes back, the applet resumes execution at&nbsp;<strong>start( )<\/strong>.<\/li>\n\t<li><strong>paint( ) :&nbsp;<\/strong>The&nbsp;<strong>paint( )<\/strong>&nbsp;method is called each time an AWT-based applet&rsquo;s output must be redrawn. This situation can occur for several reasons. For example, the window in which the applet is running may be overwritten by another window and then uncovered. Or the applet window may be minimized and then restored.\n\t<p><strong>paint( )<\/strong>&nbsp;is also called when the applet begins execution. Whatever the cause, whenever the applet must redraw its output,&nbsp;<strong>paint( )&nbsp;<\/strong>is called.<\/p>\n\t&nbsp;\n\n\t<p>The&nbsp;<strong>paint( )<\/strong>&nbsp;method has one parameter of type&nbsp;<a href=\"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/awt\/Graphics.html\" target=\"_blank\">Graphics<\/a>. This parameter will contain the graphics context, which describes the graphics environment in which the applet is running. This context is used whenever output to the applet is required.<br \/>\n\tNote: This is the only method among all the method mention above, which is parametrised. It&rsquo;s prototype is<br \/>\n\tpublic void paint(Graphics g)<br \/>\n\twhere g is an object reference of class Graphic.<\/p>\n\n\t<p>Now the&nbsp;<strong>Question Arises:<\/strong><br \/>\n\t<strong>Q.<\/strong>&nbsp;In the prototype of paint() method, we have created an object reference without creating its object. But how is it possible to create object reference without creating its object?<br \/>\n\t<strong>Ans.<\/strong>&nbsp;Whenever we pass object reference in arguments then the object will be provided by its caller itself. In this case the caller of paint() method is browser, so it will provide an object. The same thing happens when we create a very basic program in normal Java programs. For Example:<\/p>\n\n\t<pre>\npublic static void main(String []args){}\n<\/pre>\n\n\t<p>Here we have created an object reference without creating its object but it still runs because it&rsquo;s caller,i.e JVM will provide it with an object.<\/p>\n\t<\/li>\n\t<li><strong>stop( ) :&nbsp;<\/strong>The&nbsp;<strong>stop( )<\/strong>&nbsp;method is called when a web browser leaves the HTML document containing the applet&mdash;when it goes to another page, for example. When&nbsp;<strong>stop( )<\/strong>&nbsp;is called, the applet is probably running. You should use&nbsp;<strong>stop( )<\/strong>&nbsp;to suspend threads that don&rsquo;t need to run when the applet is not visible. You can restart them when&nbsp;<strong>start( )<\/strong>&nbsp;is called if the user returns to the page.<\/li>\n\t<li><strong>destroy( ) :<\/strong>&nbsp;The&nbsp;<strong>destroy( )<\/strong>&nbsp;method is called when the environment determines that your applet needs to be removed completely from memory. At this point, you should free up any resources the applet may be using. The&nbsp;<strong>stop( )<\/strong>&nbsp;method is always called before&nbsp;<strong>destroy( )<\/strong>.<\/li>\n<\/ol>\n\n<p><strong>Creating Hello World applet :<\/strong><\/p>\n\n<p>Let&rsquo;s begin with the HelloWorld applet :<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p><code>\/\/ A Hello World Applet<\/code><\/p>\n\n<p><code>\/\/ Save file as HelloWorld.java<\/code><\/p>\n\n<p><code>&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>import<\/code> <code>java.applet.Applet;<\/code><\/p>\n\n<p><code>import<\/code> <code>java.awt.Graphics;<\/code><\/p>\n\n<p><code>&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>\/\/ HelloWorld class extends Applet<\/code><\/p>\n\n<p><code>public<\/code> <code>class<\/code> <code>HelloWorld <\/code><code>extends<\/code> <code>Applet&nbsp;<\/code><\/p>\n\n<p><code>{<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>\/\/ Overriding paint() method<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>@Override<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>public<\/code> <code>void<\/code> <code>paint(Graphics g)&nbsp;<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>{<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>g.drawString(<\/code><code>&quot;Hello World&quot;<\/code><code>, <\/code><code>20<\/code><code>, <\/code><code>20<\/code><code>);<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>}<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>}<\/code><\/p>\n<\/div>\n\n<p><strong>Explanation:<\/strong><\/p>\n\n<ol>\n\t<li>The above java program begins with two import statements. The first import statement imports the Applet class from applet package. Every AWT-based(Abstract Window Toolkit) applet that you create must be a subclass (either directly or indirectly) of Applet class. The second statement import the&nbsp;<a href=\"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/awt\/Graphics.html\" target=\"_blank\">Graphics<\/a>&nbsp;class from AWT package.<\/li>\n\t<li>The next line in the program declares the class HelloWorld. This class must be declared as public because it will be accessed by code that is outside the program. Inside HelloWorld,&nbsp;<strong>paint( )<\/strong>&nbsp;is declared. This method is defined by the AWT and must be overridden by the applet.<\/li>\n\t<li>Inside&nbsp;<strong>paint( )<\/strong>&nbsp;is a call to&nbsp;<em>drawString( )<\/em>, which is a member of the&nbsp;<a href=\"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/awt\/Graphics.html\" target=\"_blank\">Graphics<\/a>&nbsp;class. This method outputs a string beginning at the specified X,Y location. It has the following general form:<\/li>\n<\/ol>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nvoid drawString(String message, int x, int y)<\/pre>\n<\/div>\n\n<ol>\n\t<li>\n\t<p>Here, message is the string to be output beginning at x,y. In a Java window, the upper-left corner is location 0,0. The call to&nbsp;<em>drawString( )&nbsp;<\/em>in the applet causes the message &ldquo;Hello World&rdquo; to be displayed beginning at location 20,20.<\/p>\n\t<\/li>\n<\/ol>\n\n<p>Notice that the applet does not have a&nbsp;<strong>main( )<\/strong>&nbsp;method. Unlike Java programs, applets do not begin execution at&nbsp;<strong>main( )<\/strong>. In fact, most applets don&rsquo;t even have a&nbsp;<strong>main( )<\/strong>&nbsp;method. Instead, an applet begins execution when the name of its class is passed to an applet viewer or to a network browser.<\/p>\n\n<p><strong>Running the HelloWorld Applet :<\/strong><\/p>\n\n<p>After you enter the source code for HelloWorld.java, compile in the same way that you have been compiling java programs(using&nbsp;<em>javac<\/em>&nbsp;command). However, running HelloWorld with the&nbsp;<em>java<\/em>&nbsp;command will generate an error because it is not an application.<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\njava HelloWorld\n\nError: Main method not found in class HelloWorld, please define the main method as:\npublic static void main(String[] args)<\/pre>\n<\/div>\n\n<p>There are&nbsp;<strong>two<\/strong>&nbsp;standard ways in which you can run an applet :<\/p>\n\n<ol>\n\t<li>Executing the applet within a Java-compatible web browser.<\/li>\n\t<li>Using an applet viewer, such as the standard tool, applet-viewer. An applet viewer executes your applet in a window. This is generally the fastest and easiest way to test your applet.<\/li>\n<\/ol>\n\n<p>Each of these methods is described next.<\/p>\n\n<p><br \/>\n&nbsp;<\/p>\n\n<ol>\n\t<li><strong>Using java enabled web browser :<\/strong>&nbsp;To execute an applet in a web browser we have to write a short HTML text file that contains a tag that loads the applet. We can use APPLET or OBJECT tag for this purpose. Using APPLET, here is the HTML file that executes HelloWorld :<\/li>\n<\/ol>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n&lt;applet code=&quot;HelloWorld&quot; width=200 height=60&gt;\n&lt;\/applet&gt;<\/pre>\n<\/div>\n\n<ol>\n\t<li>\n\t<p>The width and height statements specify the dimensions of the display area used by the applet. The APPLET tag contains several other options. After you create this html file, you can use it to execute the applet.<\/p>\n\n\t<p><strong>NOTE :<\/strong>&nbsp;Chrome and Firefox no longer supports NPAPI (technology required for Java applets). Refer&nbsp;<a href=\"https:\/\/java.com\/en\/download\/help\/enable_browser.xml\" target=\"_blank\">here<\/a><\/p>\n\t<\/li>\n\t<li><strong>Using appletviewer :&nbsp;<\/strong>This is the easiest way to run an applet. To execute HelloWorld with an applet viewer, you may also execute the HTML file shown earlier. For example, if the preceding HTML file is saved with<br \/>\n\tRunHelloWorld.html,then the following command line will run HelloWorld :<\/li>\n<\/ol>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nappletviewer RunHelloWorld.html\n<\/pre>\n<\/div>\n\n<p><strong>appletviewer with java source file :&nbsp;<\/strong>If you include a comment at the head of your Java source code file that contains the APPLET tag then your code is documented with a prototype of the necessary HTML statements, and you can run your compiled applet merely by starting the applet viewer with your Java source code file. If you use this method, the HelloWorld source file looks like this :<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p><code>\/\/ A Hello World Applet<\/code><\/p>\n\n<p><code>\/\/ Save file as HelloWorld.java<\/code><\/p>\n\n<p><code>&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>import<\/code> <code>java.applet.Applet;<\/code><\/p>\n\n<p><code>import<\/code> <code>java.awt.Graphics;<\/code><\/p>\n\n<p><code>&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>\/*<\/code><\/p>\n\n<p><code>&lt;applet code=&quot;HelloWorld&quot; width=200 height=60&gt;<\/code><\/p>\n\n<p><code>&lt;\/applet&gt;<\/code><\/p>\n\n<p><code>*\/<\/code><\/p>\n\n<p><code>&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>\/\/ HelloWorld class extends Applet<\/code><\/p>\n\n<p><code>public<\/code> <code>class<\/code> <code>HelloWorld <\/code><code>extends<\/code> <code>Applet&nbsp;<\/code><\/p>\n\n<p><code>{<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>\/\/ Overriding paint() method<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>@Override<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>public<\/code> <code>void<\/code> <code>paint(Graphics g)&nbsp;<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>{<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>g.drawString(<\/code><code>&quot;Hello World&quot;<\/code><code>, <\/code><code>20<\/code><code>, <\/code><code>20<\/code><code>);<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code>}<\/code><\/p>\n\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code>&nbsp;<\/p>\n\n<p><code>}<\/code><\/p>\n<\/div>\n\n<p>With this approach, first compile HelloWorld.java file and then simply run below command to run applet :<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nappletviewer HelloWorld\n<\/pre>\n<\/div>\n\n<p><strong>To prove above mentioned point,i.e paint is called again and again.<\/strong><br \/>\nTo prove this, let&rsquo;s first study what is &ldquo;Status Bar&rdquo; in Applet:<br \/>\n&ldquo;Status Bar&rdquo; is available in the left bottom window of an applet. To use the status bar and write something in it, we use method showStatus() whose prototype is<br \/>\npublic void showStatus(String)<br \/>\nBy default status bar shows &ldquo;Applet Started&rdquo;<br \/>\nBy default background colour is white.<\/p>\n\n<p>To prove paint() method is called again and again, here is the code:<br \/>\nNote:This code is with respect to Netbeans IDE.<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p>&nbsp;<\/p>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p><code>\/\/code to illustrate paint&nbsp;<\/code><\/p>\n\n\t\t\t<p><code>\/\/method gets called again<\/code><\/p>\n\n\t\t\t<p><code>\/\/and again<\/code><\/p>\n\n\t\t\t<p><code>&nbsp;<\/code>&nbsp;<\/p>\n\n\t\t\t<p><code>import<\/code> <code>java.applet.*;<\/code><code>\/\/ used<\/code><\/p>\n\n\t\t\t<p><code>\/\/to access showStatus()<\/code><\/p>\n\n\t\t\t<p><code>import<\/code> <code>java.awt.*;<\/code><code>\/\/Graphic<\/code><\/p>\n\n\t\t\t<p><code>\/\/class is available in this package<\/code><\/p>\n\n\t\t\t<p><code>import<\/code> <code>java.util.Date;<\/code><code>\/\/ used&nbsp;<\/code><\/p>\n\n\t\t\t<p><code>\/\/to access Date object<\/code><\/p>\n\n\t\t\t<p><code>public<\/code> <code>class<\/code> <code>GFG <\/code><code>extends<\/code> <code>Applet<\/code><\/p>\n\n\t\t\t<p><code>{<\/code><\/p>\n\n\t\t\t<p><code>public<\/code> <code>void<\/code> <code>paint(Graphics g)<\/code><\/p>\n\n\t\t\t<p><code>{<\/code><\/p>\n\n\t\t\t<p><code>Date dt = <\/code><code>new<\/code> <code>Date();<\/code><\/p>\n\n\t\t\t<p><code>super<\/code><code>.showStatus(<\/code><code>&quot;Today is&quot;<\/code> <code>+ dt);<\/code><\/p>\n\n\t\t\t<p><code>\/\/in this line, super keyword is<\/code><\/p>\n\n\t\t\t<p><code>\/\/ avoidable too.<\/code><\/p>\n\n\t\t\t<p><code>}<\/code><\/p>\n\n\t\t\t<p><code>}<\/code><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>Note:- Here we can see that if the screen is maximised or minimised we will get updated time. This shows that paint() is called again and again.<\/p>\n\n<p><strong>Features of Applets over HTML<\/strong><\/p>\n\n<ul>\n\t<li>Displaying dynamic web pages of a web application.<\/li>\n\t<li>Playing sound files.<\/li>\n\t<li>Displaying documents<\/li>\n\t<li>Playing animations<\/li>\n<\/ul>\n\n<p>&nbsp;<\/p>\n\n<p><strong>Restrictions imposed on Java applets<\/strong><br \/>\nDue to security reasons , the following restrictions are imposed on Java applets:<\/p>\n\n<ol>\n\t<li>An applet cannot load libraries or define native methods.<\/li>\n\t<li>An applet cannot ordinarily read or write files on the execution host.<\/li>\n\t<li>An applet cannot read certain system properties.<\/li>\n\t<li>An applet cannot make network connections except to the host that it came from.<\/li>\n\t<li>An applet cannot start any program on the host that&rsquo;s executing it.<\/li>\n<\/ol>\n\n<p>This article is contributed by&nbsp;<strong>Krishna Bhatia and Pavan Gopal Rayapati<\/strong>&nbsp;and further improved by&nbsp;<a href=\"https:\/\/auth.geeksforgeeks.org\/user\/Surya%20Priy\/articles\">Surya Priy<\/a>. If you like GeeksforGeeks and would like to contribute, you can also write an article using&nbsp;<a href=\"http:\/\/www.contribute.geeksforgeeks.org\/\">contribute.geeksforgeeks.org<\/a>&nbsp;or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.<\/p>\n\n<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.<\/p>\n\n<p>Attention reader! Don&rsquo;t stop learning now. Get hold of all the important&nbsp;<a href=\"https:\/\/practice.geeksforgeeks.org\/courses\/Java-Foundation?vC=1\"><strong>Java Foundation<\/strong><\/a>&nbsp;and Collections concepts with the&nbsp;<a href=\"https:\/\/practice.geeksforgeeks.org\/courses\/Java-Collections?vC=1\"><strong>Fundamentals of Java and Java Collections Course<\/strong><\/a>&nbsp;at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more,&nbsp; please refer&nbsp;<a href=\"https:\/\/practice.geeksforgeeks.org\/courses\/complete-interview-preparation?utm_source=GeeksforGeeks&amp;utm_medium=Text&amp;utm_campaign=GFG_Article_Bottom_Text_CIP\"><strong>Complete Interview Preparation Course<\/strong><\/a><strong>.<\/strong><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"chandrapal3000","user_id":"31","branch":"cs 6th semester","subject":"9","chapter":"1","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"42","title":"C++ streams and stream classes ","notes_text":"<p>In C++ stream refers to the stream of characters that are transferred between the program thread and i\/o.<\/p>\n\n<p><em>Stream classes<\/em>&nbsp;in C++ are used to input and output operations on files and io devices. These classes have specific features and to handle input and output of the program.<\/p>\n\n<p>The&nbsp;<strong>iostream.h<\/strong>&nbsp;library holds all the stream classes in the C++ programming language.<\/p>\n\n<p>Let&#39;s see the hierarchy and learn about them,<\/p>\n\n<p><img src=\"https:\/\/www.tutorialspoint.com\/assets\/questions\/media\/28272\/ios.jpg\" style=\"height:600px; width:250px\" \/><\/p>\n\n<p>Now, let&rsquo;s learn about the classes of the<em>&nbsp;iostream<\/em>&nbsp;library.<\/p>\n\n<p><strong>ios class<\/strong>&nbsp;&minus; This class is the base class for all stream classes. The streams can be input or output streams. This class defines members that are independent of how the templates of the class are defined.<\/p>\n\n<p><strong>istream Class<\/strong>&nbsp;&minus; The istream class handles the input stream in c++ programming language. These input stream objects are used to read and interpret the input as a sequence of characters. The cin handles the input.<\/p>\n\n<p><strong>ostream class<\/strong>&nbsp;&minus; The ostream class handles the output stream in c++ programming language. These output stream objects are used to write data as a sequence of characters on the screen. cout and puts handle the out streams in c++ programming language.<\/p>\n\n<h2>Example<\/h2>\n\n<h4>OUT STREAM<\/h4>\n\n<p><strong>COUT<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\nusing namespace std;\nint main(){\n&nbsp; &nbsp;cout&lt;&lt;&quot;This output is printed on screen&quot;;\n}<\/pre>\n<\/div>\n\n<p><strong>Output<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nThis output is printed on screen<\/pre>\n<\/div>\n\n<p><strong>PUTS<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\nusing namespace std;\nint main(){\n&nbsp; &nbsp;puts(&quot;This output is printed using puts&quot;);\n}<\/pre>\n<\/div>\n\n<p><strong>Output<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nThis output is printed using puts<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<h4>IN STREAM<\/h4>\n\n<p><strong>CIN<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\nusing namespace std;\nint main(){\n&nbsp; &nbsp;int no;\n&nbsp; &nbsp;cout&lt;&lt;&quot;Enter a number &quot;;\n&nbsp; &nbsp;cin&gt;&gt;no;\n&nbsp; &nbsp;cout&lt;&lt;&quot;Number entered using cin is &quot;&lt;<\/pre>\n<\/div>\n\n<p><strong>Output<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nEnter a number 3453\nNumber entered using cin is 3453<\/pre>\n\n<p>&nbsp;<\/p>\n<\/div>\n\n<p><strong>gets<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\nusing namespace std;\nint main(){\n&nbsp; &nbsp;char ch[10];\n&nbsp; &nbsp;puts(&quot;Enter a character array&quot;);\n&nbsp; &nbsp;gets(ch);\n&nbsp; &nbsp;puts(&quot;The character array entered using gets is : &quot;);\n&nbsp; &nbsp;puts(ch);\n}<\/pre>\n<\/div>\n\n<p><strong>Output<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nEnter a character array\nthdgf\nThe character array entered using gets is :\nthdgf<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"varma_sir","user_id":"83","branch":"cs 6th semester","subject":"2","chapter":"7","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"41","title":"Inheritance: Using public, private and protected access specifiers","notes_text":"<p>One of the most important concepts in object-oriented programming is that of inheritance. Inheritance allows us to define a class in terms of another class, which makes it easier to create and maintain an application. This also provides an opportunity to reuse the code functionality and fast implementation time.<\/p>\n\n<p>When creating a class, instead of writing completely new data members and member functions, the programmer can designate that the new class should inherit the members of an existing class. This existing class is called the&nbsp;<strong>base<\/strong>&nbsp;class, and the new class is referred to as the&nbsp;<strong>derived<\/strong>&nbsp;class.<\/p>\n\n<p>The idea of inheritance implements the&nbsp;<strong>is a<\/strong>&nbsp;relationship. For example, mammal IS-A animal, dog IS-A mammal hence dog IS-A animal as well and so on.<\/p>\n\n<h2>Base and Derived Classes<\/h2>\n\n<p>A class can be derived from more than one classes, which means it can inherit data and functions from multiple base classes. To define a derived class, we use a class derivation list to specify the base class(es). A class derivation list names one or more base classes and has the form &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nclass derived-class: access-specifier base-class\n<\/pre>\n<\/div>\n\n<p>Where access-specifier is one of&nbsp;<strong>public, protected,<\/strong>&nbsp;or&nbsp;<strong>private<\/strong>, and base-class is the name of a previously defined class. If the access-specifier is not used, then it is private by default.<\/p>\n\n<p>Consider a base class&nbsp;<strong>Shape<\/strong>&nbsp;and its derived class&nbsp;<strong>Rectangle<\/strong>&nbsp;as follows &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\n \nusing namespace std;\n\n\/\/ Base class\nclass Shape {\n   public:\n      void setWidth(int w) {\n         width = w;\n      }\n      void setHeight(int h) {\n         height = h;\n      }\n      \n   protected:\n      int width;\n      int height;\n};\n\n\/\/ Derived class\nclass Rectangle: public Shape {\n   public:\n      int getArea() { \n         return (width * height); \n      }\n};\n\nint main(void) {\n   Rectangle Rect;\n \n   Rect.setWidth(5);\n   Rect.setHeight(7);\n\n   \/\/ Print the area of the object.\n   cout &lt;&lt; &quot;Total area: &quot; &lt;&lt; Rect.getArea() &lt;&lt; endl;\n\n   return 0;\n}<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<p>When the above code is compiled and executed, it produces the following result &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nTotal area: 35<\/pre>\n<\/div>\n\n<h2>Access Control and Inheritance<\/h2>\n\n<p>A derived class can access all the non-private members of its base class. Thus base-class members that should not be accessible to the member functions of derived classes should be declared private in the base class.<\/p>\n\n<p>We can summarize the different access types according to - who can access them in the following way &minus;<\/p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Access<\/th>\n\t\t\t<th>public<\/th>\n\t\t\t<th>protected<\/th>\n\t\t\t<th>private<\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Same class<\/td>\n\t\t\t<td>yes<\/td>\n\t\t\t<td>yes<\/td>\n\t\t\t<td>yes<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Derived classes<\/td>\n\t\t\t<td>yes<\/td>\n\t\t\t<td>yes<\/td>\n\t\t\t<td>no<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Outside classes<\/td>\n\t\t\t<td>yes<\/td>\n\t\t\t<td>no<\/td>\n\t\t\t<td>no<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<p>A derived class inherits all base class methods with the following exceptions &minus;<\/p>\n\n<ul>\n\t<li>Constructors, destructors and copy constructors of the base class.<\/li>\n\t<li>Overloaded operators of the base class.<\/li>\n\t<li>The friend functions of the base class.<\/li>\n<\/ul>\n\n<h2>Type of Inheritance<\/h2>\n\n<p>When deriving a class from a base class, the base class may be inherited through&nbsp;<strong>public, protected<\/strong>&nbsp;or&nbsp;<strong>private<\/strong>&nbsp;inheritance. The type of inheritance is specified by the access-specifier as explained above.<\/p>\n\n<p>We hardly use&nbsp;<strong>protected<\/strong>&nbsp;or&nbsp;<strong>private<\/strong>&nbsp;inheritance, but&nbsp;<strong>public<\/strong>&nbsp;inheritance is commonly used. While using different type of inheritance, following rules are applied &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p><strong>Public Inheritance<\/strong>&nbsp;&minus; When deriving a class from a&nbsp;<strong>public<\/strong>&nbsp;base class,&nbsp;<strong>public<\/strong>&nbsp;members of the base class become&nbsp;<strong>public<\/strong>&nbsp;members of the derived class and&nbsp;<strong>protected<\/strong>&nbsp;members of the base class become&nbsp;<strong>protected<\/strong>&nbsp;members of the derived class. A base class&#39;s&nbsp;<strong>private<\/strong>&nbsp;members are never accessible directly from a derived class, but can be accessed through calls to the&nbsp;<strong>public<\/strong>&nbsp;and&nbsp;<strong>protected<\/strong>&nbsp;members of the base class.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Protected Inheritance<\/strong>&nbsp;&minus; When deriving from a&nbsp;<strong>protected<\/strong>&nbsp;base class,&nbsp;<strong>public<\/strong>&nbsp;and&nbsp;<strong>protected<\/strong>&nbsp;members of the base class become&nbsp;<strong>protected<\/strong>&nbsp;members of the derived class.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Private Inheritance<\/strong>&nbsp;&minus; When deriving from a&nbsp;<strong>private<\/strong>&nbsp;base class,&nbsp;<strong>public<\/strong>&nbsp;and&nbsp;<strong>protected<\/strong>&nbsp;members of the base class become&nbsp;<strong>private<\/strong>&nbsp;members of the derived class.<\/p>\n\t<\/li>\n<\/ul>\n\n<h2>Multiple Inheritance<\/h2>\n\n<p>A C++ class can inherit members from more than one class and here is the extended syntax &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nclass derived-class: access baseA, access baseB....\n<\/pre>\n<\/div>\n\n<p>Where access is one of&nbsp;<strong>public, protected,<\/strong>&nbsp;or&nbsp;<strong>private<\/strong>&nbsp;and would be given for every base class and they will be separated by comma as shown above. Let us try the following example &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\n \nusing namespace std;\n\n\/\/ Base class Shape\nclass Shape {\n   public:\n      void setWidth(int w) {\n         width = w;\n      }\n      void setHeight(int h) {\n         height = h;\n      }\n      \n   protected:\n      int width;\n      int height;\n};\n\n\/\/ Base class PaintCost\nclass PaintCost {\n   public:\n      int getCost(int area) {\n         return area * 70;\n      }\n};\n\n\/\/ Derived class\nclass Rectangle: public Shape, public PaintCost {\n   public:\n      int getArea() {\n         return (width * height); \n      }\n};\n\nint main(void) {\n   Rectangle Rect;\n   int area;\n \n   Rect.setWidth(5);\n   Rect.setHeight(7);\n\n   area = Rect.getArea();\n   \n   \/\/ Print the area of the object.\n   cout &lt;&lt; &quot;Total area: &quot; &lt;&lt; Rect.getArea() &lt;&lt; endl;\n\n   \/\/ Print the total cost of painting\n   cout &lt;&lt; &quot;Total paint cost: $&quot; &lt;&lt; Rect.getCost(area) &lt;&lt; endl;\n\n   return 0;\n}<\/pre>\n<\/div>\n\n<p>When the above code is compiled and executed, it produces the following result &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nTotal area: 35\nTotal paint cost: $2450<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"varma_sir","user_id":"83","branch":"cs 6th semester","subject":"2","chapter":"5","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"40","title":"Function overloading","notes_text":"<p>C++ allows you to specify more than one definition for a&nbsp;<strong>function<\/strong>&nbsp;name or an&nbsp;<strong>operator<\/strong>&nbsp;in the same scope, which is called&nbsp;<strong>function overloading<\/strong>&nbsp;and&nbsp;<strong>operator overloading<\/strong>&nbsp;respectively.<\/p>\n\n<p>An overloaded declaration is a declaration that is declared with the same name as a previously declared declaration in the same scope, except that both declarations have different arguments and obviously different definition (implementation).<\/p>\n\n<p>When you call an overloaded&nbsp;<strong>function<\/strong>&nbsp;or&nbsp;<strong>operator<\/strong>, the compiler determines the most appropriate definition to use, by comparing the argument types you have used to call the function or operator with the parameter types specified in the definitions. The process of selecting the most appropriate overloaded function or operator is called&nbsp;<strong>overload resolution<\/strong>.<\/p>\n\n<h2>Function Overloading in C++<\/h2>\n\n<p>You can have multiple definitions for the same function name in the same scope. The definition of the function must differ from each other by the types and\/or the number of arguments in the argument list. You cannot overload function declarations that differ only by return type.<\/p>\n\n<p>Following is the example where same function&nbsp;<strong>print()<\/strong>&nbsp;is being used to print different data types &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\nusing namespace std;\n \nclass printData {\n   public:\n      void print(int i) {\n        cout &lt;&lt; &quot;Printing int: &quot; &lt;&lt; i &lt;&lt; endl;\n      }\n      void print(double  f) {\n        cout &lt;&lt; &quot;Printing float: &quot; &lt;&lt; f &lt;&lt; endl;\n      }\n      void print(char* c) {\n        cout &lt;&lt; &quot;Printing character: &quot; &lt;&lt; c &lt;&lt; endl;\n      }\n};\n\nint main(void) {\n   printData pd;\n \n   \/\/ Call print to print integer\n   pd.print(5);\n   \n   \/\/ Call print to print float\n   pd.print(500.263);\n   \n   \/\/ Call print to print character\n   pd.print(&quot;Hello C++&quot;);\n \n   return 0;\n}<\/pre>\n<\/div>\n\n<p>When the above code is compiled and executed, it produces the following result &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nPrinting int: 5\nPrinting float: 500.263\nPrinting character: Hello C++<\/pre>\n<\/div>\n\n<h2>Operators Overloading in C++<\/h2>\n\n<p>You can redefine or overload most of the built-in operators available in C++. Thus, a programmer can use operators with user-defined types as well.<\/p>\n\n<p>Overloaded operators are functions with special names: the keyword &quot;operator&quot; followed by the symbol for the operator being defined. Like any other function, an overloaded operator has a return type and a parameter list.<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nBox operator+(const Box&amp;);\n<\/pre>\n<\/div>\n\n<p>declares the addition operator that can be used to&nbsp;<strong>add<\/strong>&nbsp;two Box objects and returns final Box object. Most overloaded operators may be defined as ordinary non-member functions or as class member functions. In case we define above function as non-member function of a class then we would have to pass two arguments for each operand as follows &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nBox operator+(const Box&amp;, const Box&amp;);\n<\/pre>\n<\/div>\n\n<p>Following is the example to show the concept of operator over loading using a member function. Here an object is passed as an argument whose properties will be accessed using this object, the object which will call this operator can be accessed using&nbsp;<strong>this<\/strong>&nbsp;operator as explained below &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass Box {\n   public:\n      double getVolume(void) {\n         return length * breadth * height;\n      }\n      void setLength( double len ) {\n         length = len;\n      }\n      void setBreadth( double bre ) {\n         breadth = bre;\n      }\n      void setHeight( double hei ) {\n         height = hei;\n      }\n      \n      \/\/ Overload + operator to add two Box objects.\n      Box operator+(const Box&amp; b) {\n         Box box;\n         box.length = this-&gt;length + b.length;\n         box.breadth = this-&gt;breadth + b.breadth;\n         box.height = this-&gt;height + b.height;\n         return box;\n      }\n      \n   private:\n      double length;      \/\/ Length of a box\n      double breadth;     \/\/ Breadth of a box\n      double height;      \/\/ Height of a box\n};\n\n\/\/ Main function for the program\nint main() {\n   Box Box1;                \/\/ Declare Box1 of type Box\n   Box Box2;                \/\/ Declare Box2 of type Box\n   Box Box3;                \/\/ Declare Box3 of type Box\n   double volume = 0.0;     \/\/ Store the volume of a box here\n \n   \/\/ box 1 specification\n   Box1.setLength(6.0); \n   Box1.setBreadth(7.0); \n   Box1.setHeight(5.0);\n \n   \/\/ box 2 specification\n   Box2.setLength(12.0); \n   Box2.setBreadth(13.0); \n   Box2.setHeight(10.0);\n \n   \/\/ volume of box 1\n   volume = Box1.getVolume();\n   cout &lt;&lt; &quot;Volume of Box1 : &quot; &lt;&lt; volume &lt;&lt;endl;\n \n   \/\/ volume of box 2\n   volume = Box2.getVolume();\n   cout &lt;&lt; &quot;Volume of Box2 : &quot; &lt;&lt; volume &lt;&lt;endl;\n\n   \/\/ Add two object as follows:\n   Box3 = Box1 + Box2;\n\n   \/\/ volume of box 3\n   volume = Box3.getVolume();\n   cout &lt;&lt; &quot;Volume of Box3 : &quot; &lt;&lt; volume &lt;&lt;endl;\n\n   return 0;\n}<\/pre>\n<\/div>\n\n<p>When the above code is compiled and executed, it produces the following result &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nVolume of Box1 : 210\nVolume of Box2 : 1560\nVolume of Box3 : 5400<\/pre>\n<\/div>\n\n<h2>Overloadable\/Non-overloadableOperators<\/h2>\n\n<p>Following is the list of operators which can be overloaded &minus;<\/p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>+<\/td>\n\t\t\t<td>-<\/td>\n\t\t\t<td>*<\/td>\n\t\t\t<td>\/<\/td>\n\t\t\t<td>%<\/td>\n\t\t\t<td>^<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>&amp;<\/td>\n\t\t\t<td>|<\/td>\n\t\t\t<td>~<\/td>\n\t\t\t<td>!<\/td>\n\t\t\t<td>,<\/td>\n\t\t\t<td>=<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>&lt;<\/td>\n\t\t\t<td>&gt;<\/td>\n\t\t\t<td>&lt;=<\/td>\n\t\t\t<td>&gt;=<\/td>\n\t\t\t<td>++<\/td>\n\t\t\t<td>--<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>&lt;&lt;<\/td>\n\t\t\t<td>&gt;&gt;<\/td>\n\t\t\t<td>==<\/td>\n\t\t\t<td>!=<\/td>\n\t\t\t<td>&amp;&amp;<\/td>\n\t\t\t<td>||<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>+=<\/td>\n\t\t\t<td>-=<\/td>\n\t\t\t<td>\/=<\/td>\n\t\t\t<td>%=<\/td>\n\t\t\t<td>^=<\/td>\n\t\t\t<td>&amp;=<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>|=<\/td>\n\t\t\t<td>*=<\/td>\n\t\t\t<td>&lt;&lt;=<\/td>\n\t\t\t<td>&gt;&gt;=<\/td>\n\t\t\t<td>[]<\/td>\n\t\t\t<td>()<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>-&gt;<\/td>\n\t\t\t<td>-&gt;*<\/td>\n\t\t\t<td>new<\/td>\n\t\t\t<td>new []<\/td>\n\t\t\t<td>delete<\/td>\n\t\t\t<td>delete []<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<p>Following is the list of operators, which can not be overloaded &minus;<\/p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>::<\/td>\n\t\t\t<td>.*<\/td>\n\t\t\t<td>.<\/td>\n\t\t\t<td>?:<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<h2>Operator Overloading Examples<\/h2>\n\n<p>Here are various operator overloading examples to help you in understanding the concept.<\/p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Sr.No<\/th>\n\t\t\t<th>Operators &amp; Example<\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>1<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/unary_operators_overloading.htm\">Unary Operators Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>2<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/binary_operators_overloading.htm\">Binary Operators Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>3<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/relational_operators_overloading.htm\">Relational Operators Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>4<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/input_output_operators_overloading.htm\">Input\/Output Operators Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>5<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/increment_decrement_operators_overloading.htm\">++ and -- Operators Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>6<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/assignment_operators_overloading.htm\">Assignment Operators Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>7<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/function_call_operator_overloading.htm\">Function call () Operator Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>8<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/subscripting_operator_overloading.htm\">Subscripting [] Operator Overloading<\/a><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>9<\/td>\n\t\t\t<td><a href=\"https:\/\/www.tutorialspoint.com\/cplusplus\/class_member_access_operator_overloading.htm\">Class Member Access Operator -&gt; Overloading<\/a><\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"varma_sir","user_id":"83","branch":"cs 6th semester","subject":"2","chapter":"4","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"39","title":"Representation of expressions: Infix, Postfix, Prefix","notes_text":"<p>The way to write arithmetic expression is known as a&nbsp;<strong>notation<\/strong>. An arithmetic expression can be written in three different but equivalent notations, i.e., without changing the essence or output of an expression. These notations are &minus;<\/p>\n\n<ul>\n\t<li>Infix Notation<\/li>\n\t<li>Prefix (Polish) Notation<\/li>\n\t<li>Postfix (Reverse-Polish) Notation<\/li>\n<\/ul>\n\n<p>These notations are named as how they use operator in expression. We shall learn the same here in this chapter.<\/p>\n\n<h2>Infix Notation<\/h2>\n\n<p>We write expression in&nbsp;<strong>infix<\/strong>&nbsp;notation, e.g. a - b + c, where operators are used&nbsp;<strong>in<\/strong>-between operands. It is easy for us humans to read, write, and speak in infix notation but the same does not go well with computing devices. An algorithm to process infix notation could be difficult and costly in terms of time and space consumption.<\/p>\n\n<h2>Prefix Notation<\/h2>\n\n<p>In this notation, operator is&nbsp;<strong>prefix<\/strong>ed to operands, i.e. operator is written ahead of operands. For example,&nbsp;<strong>+ab<\/strong>. This is equivalent to its infix notation&nbsp;<strong>a + b<\/strong>. Prefix notation is also known as&nbsp;<strong>Polish Notation<\/strong>.<\/p>\n\n<h2>Postfix Notation<\/h2>\n\n<p>This notation style is known as&nbsp;<strong>Reversed Polish Notation<\/strong>. In this notation style, the operator is&nbsp;<strong>postfix<\/strong>ed to the operands i.e., the operator is written after the operands. For example,&nbsp;<strong>ab+<\/strong>. This is equivalent to its infix notation&nbsp;<strong>a + b<\/strong>.<\/p>\n\n<p>The following table briefly tries to show the difference in all three notations &minus;<\/p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Sr.No.<\/th>\n\t\t\t<th>Infix Notation<\/th>\n\t\t\t<th>Prefix Notation<\/th>\n\t\t\t<th>Postfix Notation<\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>1<\/td>\n\t\t\t<td>a + b<\/td>\n\t\t\t<td>+ a b<\/td>\n\t\t\t<td>a b +<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>2<\/td>\n\t\t\t<td>(a + b) &lowast; c<\/td>\n\t\t\t<td>&lowast; + a b c<\/td>\n\t\t\t<td>a b + c &lowast;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>3<\/td>\n\t\t\t<td>a &lowast; (b + c)<\/td>\n\t\t\t<td>&lowast; a + b c<\/td>\n\t\t\t<td>a b c + &lowast;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>4<\/td>\n\t\t\t<td>a \/ b + c \/ d<\/td>\n\t\t\t<td>+ \/ a b \/ c d<\/td>\n\t\t\t<td>a b \/ c d \/ +<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>5<\/td>\n\t\t\t<td>(a + b) &lowast; (c + d)<\/td>\n\t\t\t<td>&lowast; + a b + c d<\/td>\n\t\t\t<td>a b + c d + &lowast;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>6<\/td>\n\t\t\t<td>((a + b) &lowast; c) - d<\/td>\n\t\t\t<td>- &lowast; + a b c d<\/td>\n\t\t\t<td>a b + c &lowast; d -<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<h2>Parsing Expressions<\/h2>\n\n<p>As we have discussed, it is not a very efficient way to design an algorithm or program to parse infix notations. Instead, these infix notations are first converted into either postfix or prefix notations and then computed.<\/p>\n\n<p>To parse any arithmetic expression, we need to take care of operator precedence and associativity also.<\/p>\n\n<h3>Precedence<\/h3>\n\n<p>When an operand is in between two different operators, which operator will take the operand first, is decided by the precedence of an operator over others. For example &minus;<\/p>\n\n<p><img alt=\"Operator Precendence\" src=\"https:\/\/www.tutorialspoint.com\/data_structures_algorithms\/images\/operator_precedence.jpg\" \/><\/p>\n\n<p>As multiplication operation has precedence over addition, b * c will be evaluated first. A table of operator precedence is provided later.<\/p>\n\n<h3>Associativity<\/h3>\n\n<p>Associativity describes the rule where operators with the same precedence appear in an expression. For example, in expression a + b &minus; c, both + and &ndash; have the same precedence, then which part of the expression will be evaluated first, is determined by associativity of those operators. Here, both + and &minus; are left associative, so the expression will be evaluated as&nbsp;<strong>(a + b) &minus; c<\/strong>.<\/p>\n\n<p>Precedence and associativity determines the order of evaluation of an expression. Following is an operator precedence and associativity table (highest to lowest) &minus;<\/p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Sr.No.<\/th>\n\t\t\t<th>Operator<\/th>\n\t\t\t<th>Precedence<\/th>\n\t\t\t<th>Associativity<\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>1<\/td>\n\t\t\t<td>Exponentiation ^<\/td>\n\t\t\t<td>Highest<\/td>\n\t\t\t<td>Right Associative<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>2<\/td>\n\t\t\t<td>Multiplication ( &lowast; ) &amp; Division ( \/ )<\/td>\n\t\t\t<td>Second Highest<\/td>\n\t\t\t<td>Left Associative<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>3<\/td>\n\t\t\t<td>Addition ( + ) &amp; Subtraction ( &minus; )<\/td>\n\t\t\t<td>Lowest<\/td>\n\t\t\t<td>Left Associative<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<p>The above table shows the default behavior of operators. At any point of time in expression evaluation, the order can be altered by using parenthesis. For example &minus;<\/p>\n\n<p>In&nbsp;<strong>a + b*c<\/strong>, the expression part&nbsp;<strong>b<\/strong>*<strong>c<\/strong>&nbsp;will be evaluated first, with multiplication as precedence over addition. We here use parenthesis for&nbsp;<strong>a + b<\/strong>&nbsp;to be evaluated first, like&nbsp;<strong>(a + b)*c<\/strong>.<\/p>\n\n<h2>Postfix Evaluation Algorithm<\/h2>\n\n<p>We shall now look at the algorithm on how to evaluate postfix notation &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nStep 1 &minus; scan the expression from left to right \nStep 2 &minus; if it is an operand push it to stack \nStep 3 &minus; if it is an operator pull operand from stack and perform operation \nStep 4 &minus; store the output of step 3, back to stack \nStep 5 &minus; scan the expression until all operands are consumed \nStep 6 &minus; pop the stack and perform operation<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs 6th semester","subject":"1","chapter":"3","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"38","title":"Push and Pop Operation","notes_text":"<p>A stack is an Abstract Data Type (ADT), commonly used in most programming languages. It is named stack as it behaves like a real-world stack, for example &ndash; a deck of cards or a pile of plates, etc.<\/p>\n\n<p><img alt=\"Stack Example\" src=\"https:\/\/www.tutorialspoint.com\/data_structures_algorithms\/images\/stack_example.jpg\" \/><\/p>\n\n<p>A real-world stack allows operations at one end only. For example, we can place or remove a card or plate from the top of the stack only. Likewise, Stack ADT allows all data operations at one end only. At any given time, we can only access the top element of a stack.<\/p>\n\n<p>This feature makes it LIFO data structure. LIFO stands for Last-in-first-out. Here, the element which is placed (inserted or added) last, is accessed first. In stack terminology, insertion operation is called&nbsp;<strong>PUSH<\/strong>&nbsp;operation and removal operation is called&nbsp;<strong>POP<\/strong>&nbsp;operation.<\/p>\n\n<h2>Stack Representation<\/h2>\n\n<p>The following diagram depicts a stack and its operations &minus;<\/p>\n\n<p><img alt=\"Stack Representation\" src=\"https:\/\/www.tutorialspoint.com\/data_structures_algorithms\/images\/stack_representation.jpg\" \/><\/p>\n\n<p>A stack can be implemented by means of Array, Structure, Pointer, and Linked List. Stack can either be a fixed size one or it may have a sense of dynamic resizing. Here, we are going to implement stack using arrays, which makes it a fixed size stack implementation.<\/p>\n\n<h2>Basic Operations<\/h2>\n\n<p>Stack operations may involve initializing the stack, using it and then de-initializing it. Apart from these basic stuffs, a stack is used for the following two primary operations &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p><strong>push()<\/strong>&nbsp;&minus; Pushing (storing) an element on the stack.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>pop()<\/strong>&nbsp;&minus; Removing (accessing) an element from the stack.<\/p>\n\t<\/li>\n<\/ul>\n\n<p>When data is PUSHed onto stack.<\/p>\n\n<p>To use a stack efficiently, we need to check the status of stack as well. For the same purpose, the following functionality is added to stacks &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p><strong>peek()<\/strong>&nbsp;&minus; get the top data element of the stack, without removing it.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>isFull()<\/strong>&nbsp;&minus; check if stack is full.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>isEmpty()<\/strong>&nbsp;&minus; check if stack is empty.<\/p>\n\t<\/li>\n<\/ul>\n\n<p>At all times, we maintain a pointer to the last PUSHed data on the stack. As this pointer always represents the top of the stack, hence named&nbsp;<strong>top<\/strong>. The&nbsp;<strong>top<\/strong>&nbsp;pointer provides top value of the stack without actually removing it.<\/p>\n\n<p>First we should learn about procedures to support stack functions &minus;<\/p>\n\n<h3>peek()<\/h3>\n\n<p>Algorithm of peek() function &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbegin procedure peek\n   return stack[top]\nend procedure<\/pre>\n<\/div>\n\n<p>mplementation of peek() function in C programming language &minus;<\/p>\n\n<p><strong>Example<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nint peek() {\n   return stack[top];\n}<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<h3>isfull()<\/h3>\n\n<p>Algorithm of isfull() function &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbegin procedure isfull\n\n   if top equals to MAXSIZE\n      return true\n   else\n      return false\n   endif\n   \nend procedure<\/pre>\n<\/div>\n\n<p>Implementation of isfull() function in C programming language &minus;<\/p>\n\n<p><strong>Example<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbool isfull() {\n   if(top == MAXSIZE)\n      return true;\n   else\n      return false;\n}<\/pre>\n<\/div>\n\n<h3>isempty()<\/h3>\n\n<p>Algorithm of isempty() function &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbegin procedure isempty\n\n   if top less than 1\n      return true\n   else\n      return false\n   endif\n   \nend procedure<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<p>Implementation of isempty() function in C programming language is slightly different. We initialize top at -1, as the index in array starts from 0. So we check if the top is below zero or -1 to determine if the stack is empty. Here&#39;s the code &minus;<\/p>\n\n<p><strong>Example<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbool isempty() {\n   if(top == -1)\n      return true;\n   else\n      return false;\n}<\/pre>\n<\/div>\n\n<h2>Push Operation<\/h2>\n\n<p>The process of putting a new data element onto stack is known as a Push Operation. Push operation involves a series of steps &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p><strong>Step 1<\/strong>&nbsp;&minus; Checks if the stack is full.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 2<\/strong>&nbsp;&minus; If the stack is full, produces an error and exit.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 3<\/strong>&nbsp;&minus; If the stack is not full, increments&nbsp;<strong>top<\/strong>&nbsp;to point next empty space.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 4<\/strong>&nbsp;&minus; Adds data element to the stack location, where top is pointing.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 5<\/strong>&nbsp;&minus; Returns success.<\/p>\n\t<\/li>\n<\/ul>\n\n<p><img alt=\"Stack Push Operation\" src=\"https:\/\/www.tutorialspoint.com\/data_structures_algorithms\/images\/stack_push_operation.jpg\" \/><\/p>\n\n<p>If the linked list is used to implement the stack, then in step 3, we need to allocate space dynamically.<\/p>\n\n<h3>Algorithm for PUSH Operation<\/h3>\n\n<p>A simple algorithm for Push operation can be derived as follows &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbegin procedure push: stack, data\n\n   if stack is full\n      return null\n   endif\n   \n   top &larr; top + 1\n   stack[top] &larr; data\n\nend procedure<\/pre>\n<\/div>\n\n<p>Implementation of this algorithm in C, is very easy. See the following code &minus;<\/p>\n\n<p><strong>Example<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nvoid push(int data) {\n   if(!isFull()) {\n      top = top + 1;   \n      stack[top] = data;\n   } else {\n      printf(&quot;Could not insert data, Stack is full.\\n&quot;);\n   }\n}<\/pre>\n<\/div>\n\n<h2>Pop Operation<\/h2>\n\n<p>Accessing the content while removing it from the stack, is known as a Pop Operation. In an array implementation of pop() operation, the data element is not actually removed, instead&nbsp;<strong>top<\/strong>&nbsp;is decremented to a lower position in the stack to point to the next value. But in linked-list implementation, pop() actually removes data element and deallocates memory space.<\/p>\n\n<p>A Pop operation may involve the following steps &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p><strong>Step 1<\/strong>&nbsp;&minus; Checks if the stack is empty.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 2<\/strong>&nbsp;&minus; If the stack is empty, produces an error and exit.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 3<\/strong>&nbsp;&minus; If the stack is not empty, accesses the data element at which&nbsp;<strong>top<\/strong>&nbsp;is pointing.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 4<\/strong>&nbsp;&minus; Decreases the value of top by 1.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Step 5<\/strong>&nbsp;&minus; Returns success.<\/p>\n\t<\/li>\n<\/ul>\n\n<p><img alt=\"Stack Pop Operation\" src=\"https:\/\/www.tutorialspoint.com\/data_structures_algorithms\/images\/stack_pop_operation.jpg\" \/><\/p>\n\n<h3>Algorithm for Pop Operation<\/h3>\n\n<p>A simple algorithm for Pop operation can be derived as follows &minus;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nbegin procedure pop: stack\n\n   if stack is empty\n      return null\n   endif\n   \n   data &larr; stack[top]\n   top &larr; top - 1\n   return data\n\nend procedure<\/pre>\n<\/div>\n\n<p>Implementation of this algorithm in C, is as follows &minus;<\/p>\n\n<p><strong>Example<\/strong><\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nint pop(int data) {\n\n   if(!isempty()) {\n      data = stack[top];\n      top = top - 1;   \n      return data;\n   } else {\n      printf(&quot;Could not retrieve data, Stack is empty.\\n&quot;);\n   }\n}<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs 6th semester","subject":"1","chapter":"3","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"37","title":"Linked List using Arrays in Data Structure","notes_text":"<h2>Linked List using Arrays<\/h2>\n\n<p>Array of linked list is an important data structure used in many applications. It is an interesting structure to form a useful data structure. It combines static and dynamic structure. Static means array and dynamic means linked list used to form a useful data structure. This array of linked list structure is appropriate for applications.<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p>#include&lt;stdio.h&gt;<br \/>\n#include&lt;conio.h&gt;<br \/>\n#include&lt;stdlib.h&gt;<br \/>\n#define MAX 10 \/\/ Macro defines maximum no. of elements in the list. It is a user defined data type<br \/>\n<br \/>\nstruct<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int list[MAX];<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int element;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/new element to be inserted<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int pos;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/position of the element to be inserted or deleted<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int length;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/total no of elements<br \/>\n}l;<br \/>\nenum boolean<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;true, false<br \/>\n};<br \/>\ntypedef enum boolean boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/function prototypes<br \/>\n<br \/>\nint menu(void);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function displays the list of operations<br \/>\nvoid create(void);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function creates initial set of elements<br \/>\nvoid insert(int, int);&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function inserts the element at specified position<br \/>\nvoid delet(int);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function deletes the element at given position<br \/>\nvoid find(int);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function finds the position of the given element, if exists<br \/>\nvoid display(void);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function displays the elements in the list<br \/>\nboolean islistfull(void);&nbsp;&nbsp;\/\/This function checks whether the list is full or not boolean<br \/>\nboolean islistempty(void);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/This function checks whether the list is empty or not<br \/>\n<br \/>\nvoid main()<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int ch;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int element;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int pos;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;l.length = 0;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;while(1)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch = menu();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (ch)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1:&nbsp;&nbsp;&nbsp;l.length = 0;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2:<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (islistfull() != true)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter New element: &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;element);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter the Position : &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;pos);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insert(element, pos);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;List is Full. Cannot insert the element&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3:<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (islistempty() != true)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter the position of element to be deleted : &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;pos);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delet(pos);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;List is Empty.&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4:<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;No of elements in the list is %d&quot;, l.length);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5:<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter the element to be searched : &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;element);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find(element);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 6:<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 7:<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Exit&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;&nbsp;printf(&quot;Invalid Choice&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/function to display the list of elements<br \/>\nint menu()<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int ch;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;\/\/clrscr();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;1. Create\\n2. Insert\\n3. Delete\\n4. Count\\n5. Find\\n6. Display\\n7.Exit\\n\\n Enter your choice : &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;ch);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n\\n&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;return ch;<br \/>\n}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br \/>\nvoid create(void)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int element;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int flag=1;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;while(flag==1)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter element : &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;element);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l.list[l.length] = element;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l.length++;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;To insert another element press &#39;1&#39; : &quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;, &amp;flag);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br \/>\nvoid display(void)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int i;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;for (i=0; i&lt;l.length; i++)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Element %d : %d \\n&quot;, i+1, l.list[i]);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n}&nbsp;&nbsp;<br \/>\nvoid insert(int element, int pos)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int i;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if (pos == 0)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\nCannot insert an element at 0th position&quot;)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if (pos-1 &gt; l.length)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\nOnly %d elements exit. Cannot insert at %d position&quot;, l.length, pos);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;else<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i=l.length; i&gt;=pos-1; i--)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l.list[i+1] = l.list[i];<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l.list[pos-1] = element;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l.length++;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br \/>\nvoid delet(int pos)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int i;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if(pos == 0)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\nCannot delete at an element 0th position&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if (pos &gt; l.length)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n\\n Only %d elements exit. Cannot delete&quot;, l.length, pos);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;for (i=pos-1; i&lt;l.length; i++)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l.list[i] = l.list[i+1];<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;l.length--;<br \/>\n}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br \/>\n<br \/>\nvoid find(int element)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int i;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;int flag = 1;<br \/>\n<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;for (i=0; i&lt;l.length; i++)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(l.list[i] == element)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf (&quot;%d exists at %d position&quot;,element, i+1);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = 0;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if(flag == 1)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Element not found.\\n Press any key to continue...&quot;);<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br \/>\n}&nbsp;&nbsp;<br \/>\nboolean islistfull(void)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if (l.length == MAX)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;else<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br \/>\n}&nbsp;&nbsp;&nbsp;<br \/>\nboolean islistempty(void)<br \/>\n{<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;if (l.length == 0)<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;else<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br \/>\n}<\/p>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<p><strong>Output:<\/strong><br \/>\n<br \/>\n<strong>1. Create<\/strong><\/p>\n\n<p><strong><img alt=\"\" src=\"https:\/\/www.tutorialride.com\/images\/data-structures\/implementation-using-array-create.jpeg\" style=\"width:100%\" \/><\/strong><\/p>\n\n<p><strong>2. Insert<\/strong><\/p>\n\n<p><strong><img alt=\"\" src=\"https:\/\/www.tutorialride.com\/images\/data-structures\/implementation-using-array-insert.jpeg\" style=\"width:100%\" \/><\/strong><\/p>\n\n<p><strong>3. Delete<\/strong><\/p>\n\n<p><strong><img alt=\"\" src=\"https:\/\/www.tutorialride.com\/images\/data-structures\/implementation-using-array-delete.jpeg\" style=\"width:100%\" \/><\/strong><\/p>\n\n<p>&nbsp;<\/p>\n\n<h2>Difference between Array and Linked List<\/h2>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Array<\/th>\n\t\t\t<th>Linked List<\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Array is a collection of elements having same data type with common name.<\/td>\n\t\t\t<td>Linked list is an ordered collection of elements which are connected by links.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Elements can be accessed randomly.<\/td>\n\t\t\t<td>Elements cannot be accessed randomly. It can be accessed only sequentially.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Array elements can be stored in consecutive manner in memory.<\/td>\n\t\t\t<td>Linked list elements can be stored at any available place as address of node is stored in previous node.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Insert and delete operation takes more time in array.<\/td>\n\t\t\t<td>Insert and delete operation cannot take more time. It performs operation in fast and in easy way.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Memory is allocated at compile time.<\/td>\n\t\t\t<td>Memory is allocated at run time.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>It can be single dimensional, two dimensional or multidimensional.<\/td>\n\t\t\t<td>It can be singly, doubly or circular linked list.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Each array element is independent and does not have a connection with previous element or with its location.<\/td>\n\t\t\t<td>Location or address of element is stored in the link part of previous element or node.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Array elements cannot be added, deleted once it is declared.<\/td>\n\t\t\t<td>The nodes in the linked list can be added and deleted from the list.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>In array, elements can be modified easily by identifying the index value.<\/td>\n\t\t\t<td>In linked list, modifying the node is a complex process.<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td>Pointer cannot be used in array. So, it does not require extra space in memory for pointer.<\/td>\n\t\t\t<td>Pointers are used in linked list. Elements are maintained using pointers or links. So, it requires extra memory space for pointers.<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n\n<ul>\n<\/ul>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"sharma_sir","user_id":"82","branch":"cs 6th semester","subject":"1","chapter":"3","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"35","title":"The wolf and the seven little kids","notes_text":"<p><img alt=\"\" src=\"https:\/\/www.studentuk.com\/wp-content\/uploads\/2020\/05\/wolf1.jpg\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>here&nbsp;was once on a time, an old Goat who had seven little Kids, and loved them with all the love of a mother for her children.<\/p>\n\n<p>One day, she wanted to go into the forest and fetch some food. So she called all seven to her and said, &ldquo;Dear Children, I have to go into the forest. Be on your guard against the Wolf. If he come in, he will devour you all&mdash;skin, hair, and all. The wretch often disguises himself; but you will know him at once by his rough voice and his black feet.&rdquo;<\/p>\n\n<p>The Kids said, &ldquo;Dear Mother, we will take good care of ourselves. You may go away without any anxiety.&rdquo;<\/p>\n\n<p>Then the old one bleated, and went on her way with an easy mind.<\/p>\n\n<p>It was not long before some one knocked at the house-door, and cried, &ldquo;Open the door, dear Children! Your mother is here, and has brought something back with her for each of you.&rdquo;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/www.studentuk.com\/wp-content\/uploads\/2020\/05\/wolf3.jpg\" style=\"width:100%\" \/><\/p>\n\n<p>But the little Kids knew that it was the Wolf, by his rough voice. &ldquo;We will not open the door,&rdquo; cried they; &ldquo;you are not20&nbsp;our mother. She has a soft, pleasant voice, but your voice is rough. You are the Wolf!&rdquo;<\/p>\n\n<p>Then the Wolf went away to a shopkeeper, and bought a great lump of chalk, ate this and made his voice soft with it. Then he came back, knocked at the door of the house, and cried, &ldquo;Open the door, dear Children! Your mother is here and has brought something back with her for each of you.&rdquo;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/www.studentuk.com\/wp-content\/uploads\/2020\/05\/wolf2.jpg\" style=\"width:100%\" \/><\/p>\n\n<p>But the Wolf had laid his black paws against the window, and the children saw them, and cried, &ldquo;We will not open the door, our mother has not black feet like you. You are the Wolf!&rdquo;<\/p>\n\n<p>Then the Wolf ran to a baker, and said, &ldquo;I have hurt my feet, rub some dough over them for me.&rdquo;<\/p>\n\n<p>And when the baker had rubbed his feet over, he ran to the miller and said, &ldquo;Strew some white meal over my feet for me.&rdquo; The miller thought to himself, &ldquo;The Wolf wants to deceive some one,&rdquo; and refused. But the Wolf said, &ldquo;If you will not do it, I will devour you.&rdquo; Then the miller was afraid, and made his paws white for him. Yes! so are men!<\/p>\n\n<p>Now, the wretch went for the third time to the house-door, knocked at it, and said, &ldquo;Open the door for me, Children! Your dear little mother has come home, and has brought every one of you something from the forest with her.&rdquo;<\/p>\n\n<p>The little Kids cried, &ldquo;First show us your paws that we may know if you are our dear little mother.&rdquo;<\/p>\n\n<p>Then he put his paws in through the window. And when the Kids saw that they were white, they believed all that he said, and opened the door. But who should come in but&nbsp;<em>the Wolf<\/em>!<\/p>\n\n<p>THE LITTLE KIDS CRIED, &ldquo;FIRST SHOW US YOUR PAWS&rdquo;<\/p>\n\n<p>They were terrified and wanted to hide themselves. One sprang under the table, the second into the bed, the third into the stove, the fourth into the kitchen, the fifth into the cupboard, the sixth under the washing-bowl, and the seventh into the clock-case. But the Wolf found them all and made no delay, but swallowed one after the other down his throat. The youngest in the clock-case was the only one he did not find.<\/p>\n\n<p>When the Wolf had satisfied his appetite, he took himself off, laid himself down under a tree in the green meadow outside, and began to sleep.<\/p>\n\n<p>Soon afterward, the old Goat came home again from the forest. Ah! what a sight she saw there! The house-door stood wide open. The table, chairs, and benches were thrown down, the washing-bowl lay broken to pieces, and the quilts and pillows were pulled off the bed.<\/p>\n\n<p>She sought her children, but they were nowhere to be found. She called them one after another by name, but no one answered. At last, when she called the youngest, a soft voice cried, &ldquo;Dear Mother, I am in the clock-case.&rdquo;<\/p>\n\n<p>She took the Kid out, and it told her that the Wolf had come and had eaten all the others. Then you may imagine how she wept over her poor children!<\/p>\n\n<p>At length, in her grief she went out, and the youngest Kid ran with her. When they came to the meadow, there lay the Wolf by the tree and he was snoring so loud that the branches shook. She looked at him on every side and saw that something was moving and struggling in his stomach. &ldquo;Ah!&rdquo; said she, &ldquo;is it possible that my poor children, whom he has swallowed down for his supper, can be still alive?&rdquo;<\/p>\n\n<p>Then the Kid had to run home and fetch scissors, and a needle and thread, and the Goat cut open the monster&rsquo;s stomach. Hardly had she made one cut, than a little Kid thrust its head out, and when she had cut farther, all six sprang out one after another, and were all still alive, and had suffered no hurt whatever, for in his greediness the monster had swallowed them whole.<\/p>\n\n<p>What rejoicing there was! They embraced their dear mother, and jumped like a tailor at his wedding. The mother, however, said, &ldquo;Now go and look for some big stones. We will fill the wicked beast&rsquo;s stomach with them, while he is asleep.&rdquo;<\/p>\n\n<p>Then the seven Kids dragged the stones thither with all speed, and put as many of them into his stomach as they could get in. And the mother sewed him up again in the greatest haste; so that he was not aware of anything and never once stirred.<\/p>\n\n<p>When the Wolf had had his sleep out, he got on his legs, and as the stones in his stomach made him very thirsty, he wanted to go to a well to drink. But when he began to walk and to move about, the stones in his stomach knocked against each other and rattled. Then cried he:<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/www.studentuk.com\/wp-content\/uploads\/2020\/05\/wolf4.jpg\" style=\"width:100%\" \/><\/p>\n\n<p>&ldquo;<em>What rumbles and tumbles<\/em><em>Against my poor bones?<\/em><em>I thought &rsquo;twas six Kids,<\/em><em>But it&rsquo;s only big stones!<\/em>&rdquo;<\/p>\n\n<p>And when he got to the well and stooped over the water and was just about to drink, the heavy stones made him fall in. There was no help for it, but he had to drown miserably!<\/p>\n\n<p>When the seven Kids saw that, they came running to the spot and cried aloud, &ldquo;The Wolf is dead! The Wolf is dead!&rdquo; and danced for joy round about the well with their mother.<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"all","subject":"all","chapter":"all","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"32","title":"Computer-Aided Process Planning (CAPP):","notes_text":"<h2><strong>Computer-Aided Process Planning (CAPP):<\/strong><\/h2>\r\n\r\n<p><strong>It can be defined as an act of preparing processing documentation for the manufacturing of a piece, part or an assembly, etc. is called as process planning. If process planning was done by using a computer it is called Computer-Aided Process Planning(CAPP).<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-3\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<p>This post mainly focuses on, the structure of Computer-Aided Process Planning(CAPP) in a detailed manner.<\/p>\r\n\r\n<p><img alt=\"\" src=\"https:\/\/mechanicalenotes.com\/wp-content\/uploads\/2020\/06\/Structure-of-Computer-Aided-Process-Planning-system.jpg.webp\" style=\"width:100%\" \/><\/p>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<p><strong>COMPUTER-AIDED PROCESS PLANNING(CAPP) METHOD:<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-4\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>It can systematically produce accurate and consistent process plans.<\/li>\r\n\t<li>It can reduce the cost and lead time of process planning.<\/li>\r\n\t<li>Less skilled process planners may be employed.<\/li>\r\n\t<li>It increases the productivity of process planners.<\/li>\r\n\t<li>Manufacturing cost, manufacturing lead time and work standards can easily be interfaced with the CAPP system.<\/li>\r\n<\/ul>\r\n\r\n<h3><strong>Why Computer Aided Process Planning(CAPP)?<\/strong><\/h3>\r\n\r\n<ul>\r\n\t<li>Understand the interactions between the part, manufacturing, quality, and cost.<\/li>\r\n\t<li>Systematically produce accurate and consistent process plans.<\/li>\r\n\t<li>Reduce the cost and lead time of process planning.<\/li>\r\n\t<li>Skill requirements of process planners are reduced.<\/li>\r\n\t<li>Increased productivity of process planner.<\/li>\r\n\t<li>Easily interface with other application programs for further analysis.<\/li>\r\n<\/ul>\r\n\r\n<p>This is the detailed explanation of Computer-Aided Process Planning. Now, let&#39;s discuss the parts of it. They are:<\/p>\r\n\r\n<ol>\r\n\t<li><strong>Generative Computer Aided Process Planning (G CAPP)<\/strong>.<\/li>\r\n\t<li><strong>Variant Computer Aided Process Planning (Variant CAPP)<\/strong>.<\/li>\r\n\t<li><strong>Retrieval Computer Aided Process Planning (Retrieval CAPP)<\/strong>.<\/li>\r\n<\/ol>\r\n\r\n<p>The detailed explanation of all these process planning is as follows:<\/p>\r\n\r\n<div class=\"code-block code-block-5\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<h3>1. Generative Computer Aided Process Planning(G CAPP):&nbsp;<\/h3>\r\n\r\n<p>A system which automatically synthesizes a process plan for a new component is called Generative Computer Aided Process Planning. It synthesizes the process information to create a process plan for a new part automatically without human intervention. This post mainly focuses on what is the Structure and Advantages of Generative Generative Computer Aided Process Planning(G CAPP) in a detailed manner.<\/p>\r\n\r\n<div class=\"wp-block-image\">\r\n<p><img alt=\"Decision Tables in Generative CAPP\" class=\"wp-image-11094\" src=\"https:\/\/mechanicalenotes.com\/wp-content\/uploads\/2020\/06\/Decision-Tables-in-Generative-CAPP.jpg.webp\" style=\"height:500px; width:627px\" \/><\/p>\r\n\r\n<p><strong>Characteristics of Generative Computer Aided Process Planning(G CAPP):<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-6\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>No existing standard plans.<\/li>\r\n\t<li>Able to generate process plans for both new and existing parts.<\/li>\r\n\t<li>Process plans are generated by means of:\r\n\t<ul>\r\n\t\t<li>Decision logic.<\/li>\r\n\t\t<li>Formulas.<\/li>\r\n\t\t<li>Technology algorithms.<\/li>\r\n\t\t<li>Geometry based data.<\/li>\r\n\t\t<li>Geometry-based coding scheme.<\/li>\r\n\t\t<li>Process knowledge in the form of decision logic and data to perform uniquely the main decisions for converting apart from raw materials to a finished state.<\/li>\r\n\t<\/ul>\r\n\t<\/li>\r\n<\/ul>\r\n\r\n<p><strong>A requirement of Generative Computer Aided Process Planning:<\/strong><\/p>\r\n\r\n<p><strong>Part description:<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-7\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>Part to be produced must be clearly and precisely defined in a computer compatible format (OPITZ, AUTAP).<\/li>\r\n<\/ul>\r\n\r\n<p><strong>Manufacturing databases<\/strong>:<\/p>\r\n\r\n<ul>\r\n\t<li>The logic of manufacturing must be identified and captured.<\/li>\r\n\t<li>The captured logic must be incorporated in a unified manufacturing database.<\/li>\r\n<\/ul>\r\n\r\n<p><strong>Decision making logic and algorithms:<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-8\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>Decision trees.<\/li>\r\n\t<li>Expert Systems: AI-based approaches.<\/li>\r\n<\/ul>\r\n\r\n<p><strong>Decision Tables in Generative CAPP:<\/strong><\/p>\r\n\r\n<ul>\r\n\t<li>A decision table program structuring tool provides readable documentation as an automatic by product.<\/li>\r\n\t<li>A decision table is portioned into conditions and actions.<\/li>\r\n\t<li>Can be used with pre-processor to eliminate some program coding to provide automatic checks for completeness, contradiction, and redundancy.<\/li>\r\n<\/ul>\r\n\r\n<p><strong>Techniques for Generative Computer Aided Process Planning (G CAPP)<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-9\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>Identify the machinable volume and attach necessary technological details relevant for mfg.<\/li>\r\n\t<li>Do a preliminary sorting of pockets in order of levels that clearly indicate the likely sequence in the final process plan.<\/li>\r\n\t<li>Examine the pocket for any possibility of combining so that the&nbsp;<a href=\"https:\/\/mechanicalenotes.com\/machining-process\/\" rel=\"noreferrer noopener\" target=\"_blank\">machining operations<\/a>&nbsp;could be reduced.<\/li>\r\n\t<li>Select the machine tools that can be used for each of the identified pockets.<\/li>\r\n\t<li>Identify the process sequence required for the machining of the pocket based on the technological requirements.<\/li>\r\n\t<li>For each of the pocket and the operation decided, select the cutting tool required.<\/li>\r\n\t<li>Sort the operations on the basis of the machine tools and cutting tools.<\/li>\r\n\t<li>Sequence the operations on the basis of the machine tools and cutting tools by making use of heuristic rules.<\/li>\r\n\t<li>Evaluate the machining time and idle time and select the final process plan based on the lowest cost and machining time.<\/li>\r\n\t<li>Present the final results in a suitable form.<\/li>\r\n<\/ul>\r\n\r\n<h3>2. Variant CAPP:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<\/h3>\r\n\r\n<p>A process plan for a new part is created by recalling, identifying and retrieving the existing plan for a similar part and making necessary modifications for the new part. In this article, I am going to discuss Advantages and limitations of VARIANT CAPP (VCAPP) in a detailed manner.<\/p>\r\n\r\n<div class=\"wp-block-image\">\r\n<p><img alt=\"Variant CAPP or Retrieval CAPP\" class=\"wp-image-11096\" src=\"https:\/\/mechanicalenotes.com\/wp-content\/uploads\/2020\/06\/Variant-CAPP-or-Retrieval-CAPP.jpg.webp\" style=\"height:550px; width:611px\" \/><\/p>\r\n<\/div>\r\n\r\n<p><strong>Steps involved in VARIANT CAPP are as follows:<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-10\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>Define the coding system.<\/li>\r\n\t<li>Group the parts into part families.<\/li>\r\n\t<li>Develop a standard process plan.<\/li>\r\n\t<li>Retrieve and modify the standard plan.<\/li>\r\n<\/ul>\r\n\r\n<h3>3. Retrieval CAPP:<\/h3>\r\n\r\n<ul>\r\n\t<li>Based on the principles of GT.<\/li>\r\n\t<li>Also called a VARIANT Computer Aided Process Planning<strong>(Variant CAPP<u>)<\/u><\/strong>.<\/li>\r\n\t<li>GT: Group Technology.<\/li>\r\n\t<li>The concept of grouping parts together depending upon their similarities in operation sequence or geometry is called Group technology.<\/li>\r\n\t<li>Experts&rsquo; knowledge and standard process plans as per GT are needed as a database.<\/li>\r\n\t<li>Considerable work is required to collect and organize data.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<\/li>\r\n<\/ul>\r\n\r\n<p><strong>Salient points of VARIANT CAPP:<\/strong><\/p>\r\n\r\n<ul>\r\n\t<li>Easy to build, learn and use.<\/li>\r\n\t<li>Experienced process planners are still required to edit the process plan.<\/li>\r\n\t<li>Cannot be used in an entirely automated manufacturing system without additional process planning.<\/li>\r\n<\/ul>\r\n\r\n<p><strong>Problems Associated with Variant PP:<\/strong><\/p>\r\n\r\n<div class=\"code-block code-block-11\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<ul>\r\n\t<li>The components to be planned are limited to similar components previously planned.<\/li>\r\n\t<li>Experienced process planners are still required to modify the standard plan for the specific component.<\/li>\r\n\t<li>Variant planning cannot be used in an entirely&nbsp;automated manufacturing system, without additional process planning.<\/li>\r\n\t<li>These are the Advantages and Limitations of VARIANT CAPP.<\/li>\r\n<\/ul>\r\n\r\n<h2>Some FAQs Related to CAPP:<\/h2>\r\n\r\n<div class=\"rank-math-block\" id=\"rank-math-faq\">\r\n<div class=\"rank-math-list\">\r\n<div class=\"rank-math-list-item\" id=\"faq-question-5fedfd7bba778\">\r\n<h3>What is Computer-Aided Process Planning?<\/h3>\r\n\r\n<div class=\"rank-math-answer\">\r\n<p>Computer-Aided Process Planning can be defined as an act of preparing processing documentation for the manufacturing of a piece, part or an assembly by using a computer.<\/p>\r\n<\/div>\r\n<\/div>\r\n\r\n<div class=\"rank-math-list-item\" id=\"faq-question-5fedfd7bba77b\">\r\n<h3>What is Process Planning?<\/h3>\r\n\r\n<div class=\"rank-math-answer\">\r\n<p>Process Planning can be defined as an act of preparing processing documentation for the manufacturing of a piece, part or an assembly etc.is called as process planning.<\/p>\r\n\r\n<div class=\"code-block code-block-13\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n\r\n<div class=\"code-block code-block-12\" style=\"clear:both; display:block; margin-bottom:8px; margin-left:auto; margin-right:0; margin-top:8px; text-align:right\">&nbsp;<\/div>\r\n<\/div>\r\n<\/div>\r\n\r\n<div class=\"rank-math-list-item\" id=\"faq-question-5fedfd7bba77c\">\r\n<h3>What are the Steps of Process Planning?<\/h3>\r\n\r\n<div class=\"rank-math-answer\">\r\n<p>These are some steps of Process Planning:<br \/>\r\n1. Selection of raw workpiece<br \/>\r\n2. Determining manufacturing operations and their sequences<br \/>\r\n3. Selection of machine tools<\/p>\r\n<\/div>\r\n<\/div>\r\n\r\n<div class=\"rank-math-list-item\" id=\"faq-question-5fedfd7bba77d\">\r\n<h3>What is Generative Computer Aided Process Planning?<\/h3>\r\n\r\n<div class=\"rank-math-answer\">\r\n<p>A system which automatically synthesizes a process plan for a new component is called Generative Computer Aided Process Planning.<\/p>\r\n\r\n<div class=\"code-block code-block-14\" style=\"clear:both; margin-bottom:8px; margin-left:0; margin-right:0; margin-top:8px\">&nbsp;<\/div>\r\n<\/div>\r\n<\/div>\r\n\r\n<div class=\"rank-math-list-item\" id=\"faq-question-5fedfd7bba77e\">\r\n<h3>What are the types of Computer aided process planning?<\/h3>\r\n\r\n<div class=\"rank-math-answer\">\r\n<p>These are the types of CAPP:<br \/>\r\n1. Generative Computer Aided Process Planning (G CAPP)<br \/>\r\n2. Variant Computer Aided Process Planning (Variant CAPP)<br \/>\r\n3. Retrieval Computer Aided Process Planning (Retrieval CAPP)<\/p>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n\r\n<p>If you have any doubts, feel free to ask from the comments section. Please Share and Like this blog with your friends and social handles, so that it can reach to many.<\/p>\r\n<\/div>\r\n","uploaded_by":"dhasu_sir","user_id":"71","branch":"mechenical 6th semester","subject":"2","chapter":"1","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"31","title":"What Is Adaptive Cruise Control?","notes_text":"<h2>What Is Adaptive Cruise Control?<\/h2>\r\n\r\n<p>Adaptive cruise control (ACC) is a system designed to help vehicles maintain a safe following distance and stay within the speed limit. This system adjusts a car&#39;s speed automatically so drivers don&#39;t have to.<\/p>\r\n\r\n<p>Adaptive cruise control is one of 20 terms used to describe its functions so that you might see adaptive cruise control as the following in advertisements and vehicle descriptions:<\/p>\r\n\r\n<ul>\r\n\t<li>Active cruise control<\/li>\r\n\t<li>Dynamic cruise control<\/li>\r\n\t<li>Radar cruise control<\/li>\r\n\t<li>Automatic cruise control<\/li>\r\n\t<li>Intelligent cruise control<\/li>\r\n<\/ul>\r\n\r\n<ol>\r\n<\/ol>\r\n\r\n<p>ACC functions by sensory technology installed within vehicles such as cameras, lasers, and radar equipment, which creates an idea of how close one car is to another, or other objects on the roadway. For this reason, ACC is the basis for future car intelligence.<\/p>\r\n\r\n<p>These sensory technologies allow the car to detect and warn the driver about potential forward collisions. When this happens, red lights begin to flash, and the phrase &#39;brake now!&#39; appears on the dashboard to help the driver slow down. There might also be an audible warning.<\/p>\r\n\r\n<h2>Advantages of Adaptive Cruise Control<\/h2>\r\n\r\n<p>Some key advantages of<a class=\"body-link\" href=\"https:\/\/mycardoeswhat.org\/safety-features\/adaptive-cruise-control\/\" rel=\"noopener noreferrer nofollow\" target=\"_blank\"> adaptive cruise control<\/a> mentioned by MyCarDoesWhat.org include an increase in road safety, as cars with this technology will keep the adequate spacing between them and other vehicles. These space-mindful features will also help prevent accidents that result from an obstructed view or close following distance. Similarly, ACC will help maximize traffic flow because of its spatial awareness. As a driver, you don&#39;t have to worry about your speed, and instead, you can focus on what is going on around you.<\/p>\r\n\r\n<h2>Limitations of Adaptive Cruise Control<\/h2>\r\n\r\n<p>Although there are many advantages to adaptive cruise control, there are still limitations to consider. One of the main faults in this system is the fact that it is not entirely autonomous. The driver of the vehicle still needs to practice safe driving habits that will work in tandem with this technology to produce the best results. Similarly, adverse weather conditions like snow, rain, or fog might confuse the system&#39;s sensors, as well as environmental factors such as driving through tunnels.<\/p>\r\n\r\n<h2>What Is the Difference Between a Level 1 Autonomous Car and a Level 2 Autonomous Car?<\/h2>\r\n\r\n<p>According to SAE International, when a car only has <a class=\"body-link\" href=\"https:\/\/www.sae.org\/\" rel=\"noopener noreferrer\" target=\"_blank\">autonomous cruise control<\/a>, it is considered to be a level 1 autonomous car. In contrast, a vehicle with autonomous cruise control and an additional feature, such as lane control, gets classified as a level 2 autonomous car.<\/p>\r\n\r\n<h2>How Much Does an Adaptive Cruise Control System Cost?<\/h2>\r\n\r\n<p>According to ExtremeTech, <a class=\"body-link\" href=\"https:\/\/www.extremetech.com\/extreme\/157172-what-is-adaptive-cruise-control-and-how-does-it-work\" rel=\"noopener noreferrer\" target=\"_blank\">The cost of an adaptive cruise control system<\/a> will vary depending on how many features you want. If you&#39;re going to have an ACC with all available features, you should be willing to pay anywhere between $2000 and $2500. If you are looking for minimal cruise control that would benefit speeds of up to 20-25 miles per hour, these more basic ACCs can cost as low as $500. The good news is that as ACC becomes more common, it will most likely reduce in price.<\/p>\r\n\r\n<h2>History of Adaptive Cruise Control<\/h2>\r\n\r\n<p>U.S. News says Mitsubishi first introduced adaptive cruise control in<a class=\"body-link\" href=\"https:\/\/cars.usnews.com\/cars-trucks\/what-is-adaptive-cruise-control\" rel=\"noopener noreferrer nofollow\" target=\"_blank\"> Japan in 1992<\/a>. This was a lidar-based distance detection system that detected objects that were getting too close. It was labeled as &#39;Debonair&#39; and it was programmed to provide a warning to the driver about oncoming objects. The main difference was that it was the driver&#39;s job to apply the brakes and reduce their speed.<\/p>\r\n\r\n<p>However, two years later in 1995, the Mitsubishi Diamante featured an upgraded approach to the Debonair called &#39;Preview Distance Control.&#39; Unlike the original technology, this laser-powered system could adjust a driver&#39;s speed by downshifting or controlling the throttle. The driver was still responsible for applying the brakes.<\/p>\r\n\r\n<p>From the early 2000s onward, big names in the car industry, such as Ford, BMW, Mercedes, Cadillac, Volkswagen, Infinity, Hyundai, Toyota, and Audi, created their versions of adaptive cruise control in their vehicles. These individual features have evolved into a high-tech system with automatic braking and speed control.<\/p>\r\n\r\n<h2>Types of Adaptive Cruise Control<\/h2>\r\n\r\n<h3>Radar-Based Systems<\/h3>\r\n\r\n<p>According to eInfoChips, <a class=\"body-link\" href=\"https:\/\/www.einfochips.com\/blog\/why-automotive-companies-should-adopt-radar-based-adas-systems\/\" rel=\"noopener noreferrer\" target=\"_blank\">radar-based systems<\/a> work by placing radar-based sensors on or around plastic fascias to detect your vehicle&#39;s surroundings. Each radar sensor works together to create a comprehensive picture of the vehicle&#39;s proximity to other cars or potentially hazardous objects. This type of sensor can look different depending on the design and model of the car.<\/p>\r\n\r\n<h3>Laser-Based Systems<\/h3>\r\n\r\n<p>As mentioned by <a class=\"body-link\" href=\"https:\/\/www.electronicdesign.com\/markets\/automotive\/article\/21797633\/adaptive-cruise-control-laser-diodes-as-an-alternative-to-millimeterwave-radars\" rel=\"noopener noreferrer\" target=\"_blank\">Electronic Design<\/a>, this type of ACC system operates out of a large black box typically <a class=\"body-link\" href=\"https:\/\/www.caranddriver.com\/features\/columns\/a30145192\/genesis-g90-grille\/\" rel=\"noopener noreferrer follow\" target=\"_blank\">placed in the grille<\/a> of your vehicle. It uses laser technology to detect the proximity of objects to your car. It does not operate well during rainstorms and other weather conditions.<\/p>\r\n\r\n<h3>Binocular Computer Vision Systems (Optical)<\/h3>\r\n\r\n<p>According to ExtremeTech, this is a <a class=\"body-link\" href=\"https:\/\/www.extremetech.com\/extreme\/157172-what-is-adaptive-cruise-control-and-how-does-it-work\" rel=\"noopener noreferrer\" target=\"_blank\">relatively new ACC system<\/a> put into use in 2013. It uses small cameras that are placed on the back of a vehicle&#39;s rearview mirror to detect front-facing objects.<\/p>\r\n\r\n<h3>Assisting Systems<\/h3>\r\n\r\n<p>Assisting systems are radar-based add-ons that customers can buy together. These pre-crash systems can offer lane control, brake assistance, cruise control, proximity alerts to objects like corners, and steering power.<\/p>\r\n\r\n<h3>Multi-Sensor Systems<\/h3>\r\n\r\n<p><a class=\"body-link\" href=\"https:\/\/www.fierceelectronics.com\/components\/three-sensor-types-drive-autonomous-vehicles\" rel=\"noopener noreferrer\" target=\"_blank\">According to Fierce Electronics<\/a>, adaptive cruise control systems sometimes integrate more than one type of sensor to aid in a vehicle&#39;s operation. Multi-sensor systems incorporate several different sensor types to provide a driver with advanced information. These sensors might <a class=\"body-link\" href=\"https:\/\/www.caranddriver.com\/features\/columns\/a29648013\/waze-app-connection\/\" rel=\"noopener noreferrer\" target=\"_blank\">include GPS data equipment <\/a>or cameras to gather information about a vehicle&#39;s geographic environment and proximity to other cars.<\/p>\r\n\r\n<h3>Predictive Systems<\/h3>\r\n\r\n<p>As mentioned by Autoblog, <a class=\"body-link\" href=\"https:\/\/www.autoblog.com\/2015\/01\/14\/new-honda-smart-cruise-control-predicts-other-motorists-future\/?guccounter=1&amp;guce_referrer=aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnLw&amp;guce_referrer_sig=AQAAAJu7lStg07k5ZnTXQCHbBrfac66qn8MZypNEnwRjhq8EhlhYyq2h3yuhSgMtviRJhdTADXx4L3_zQsRUsKD5d-Vul127_egGkpjyVOVj2eSpYpCPBdJLIE5CR58-xiuAuPVax-XESDa6U2_KIXQsud6uZuuhC4KEcZIlusSXi2PI\" rel=\"noopener noreferrer nofollow\" target=\"_blank\">prediction systems <\/a>are a type of ACC that uses sensory data to predict the actions of neighboring vehicles. This means that your car might slow down to brace for another vehicle suddenly switching lanes and, in doing so, promotes passenger safety.<\/p>\r\n\r\n<p>Adaptive cruise control is evolving each year. Car companies are continuously making adjustments to this technology and, in doing so, creating more common and affordable options that can be purchased with a new car or added to older car models, making driving safer for everyday people.<\/p>\r\n","uploaded_by":"dhasu_sir","user_id":"71","branch":"mechenical 4th semester","subject":"5","chapter":"7","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"30","title":"Vector Calculus","notes_text":"<p>In Mathematics, Calculus is a branch that deals with the study of the rate of change of a function. Calculus plays an integral role in many fields such as Science, Engineering, Navigation, and so on. Generally, calculus is used to develop a Mathematical model to get an optimal solution. We know that calculus can be classified into two different types, such as&nbsp;<a href=\"https:\/\/byjus.com\/maths\/differential-calculus\/\">differential calculus<\/a>&nbsp;and integral calculus. But we might not be aware of vector calculus. In this article, we are going to discuss the definition of vector calculus, formulas, applications, line integrals, the surface integrals, in detail.<\/p>\n\n<p>&nbsp;<\/p>\n\n<h2>Vector Calculus Definition<\/h2>\n\n<p>Vector Calculus, also known as vector analysis, deals with the differentiation and integration of vector field, especially in the three-dimensional Euclidean space. Vector fields represent the distribution of a vector to each point in the subset of space. In Euclidean Space, the vector field on a domain is represented as a vector-valued function that compares the n-tuple of real numbers to each point on the domain. Vector analysis is an analysis which deals with the quantities that have both magnitude and direction. Vector calculus deals with two integrals such as line integrals and surface integrals.<\/p>\n\n<h3>Line Integral<\/h3>\n\n<p>In Vector Calculus, a line integral of a vector field is defined as an integral of some function along a curve. In simple words, a line integral is an integral in which the function to be integrated is calculated along with a curve. We can integrate some specific type of vector-valued functions along with a curve. For example, we can also integrate a scalar-valued function along a curve. Sometimes, a line integral is also known as a path integral, or curve integral or curvilinear integrals.<\/p>\n\n<h3>Surface Integral<\/h3>\n\n<p>In calculus, a surface integral is defined as a generalisation of several integrals to the integrations over surfaces. It means that we can think about the double integral related to the line integral. For any given surface, we can integrate a scalar field over a surface or a vector field over a surface.<\/p>\n\n<h2>Vector Calculus Formulas<\/h2>\n\n<p>Some of the important vector calculus formulas are given below:<\/p>\n\n<p>From fundamental theorems, we take,<\/p>\n\n<p>F(x, y, z) = P(x, y, z)i + Q(x, y, z)j + R(x, y, z)k<\/p>\n\n<ul>\n\t<li><strong>Fundamental Theorem of Line Integral<\/strong><\/li>\n<\/ul>\n\n<p>If F = &nabla;f and curve C has endpoints A and B, then<\/p>\n\n<p>&int;<sub>c<\/sub>&nbsp;F. dr= f(B) &minus; f(A).<\/p>\n\n<ul>\n\t<li><strong>Circulation-Curl Form<\/strong><\/li>\n<\/ul>\n\n<p>Green&rsquo;s Theorem<\/p>\n\n<p>&int;&int;<sub>D<\/sub>&nbsp;(&part;Q \/&part;x) &ndash; (&part;P\/ &part;y)dA = \u222e<sub>C<\/sub>&nbsp;F&middot; dr<\/p>\n\n<p>Stokes&rsquo; Theorem<\/p>\n\n<p>&int;&int;<sub>D<\/sub>&nbsp;&nabla; &times; F &middot; n d&sigma; = \u222e<sub>C<\/sub>&nbsp;F&middot; dr, where C is the edge curve of S<\/p>\n\n<ul>\n\t<li><strong>Flux &ndash; Divergence Form<\/strong><\/li>\n<\/ul>\n\n<p>Green&rsquo;s Theorem<\/p>\n\n<p>&int;&int;<sub>D&nbsp;<\/sub>&nabla;&middot; F dA = \u222e<sub>C&nbsp;<\/sub>F &middot; n ds<\/p>\n\n<p>Divergence Theorem<\/p>\n\n<p>&int;&int;&int;<sub>D<\/sub><sup>&nbsp;<\/sup>&nabla;&middot; F dV = \u222f<sub>S&nbsp;<\/sub>F &middot; n d&sigma;<\/p>\n\n<h2>Vector Calculus Identities<\/h2>\n\n<p>The list of Vector Calculus identities are given below for different functions such as Gradient function, Divergence function, Curl function, Laplacian function, and degree two functions.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/cdn1.byjus.com\/wp-content\/uploads\/2019\/10\/vector-calculus-identities.png\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/cdn1.byjus.com\/wp-content\/uploads\/2019\/10\/vector-calculus-identities1.png\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<h3>Vector Calculus Applications<\/h3>\n\n<p>Vector Calculus plays an important role in the different fields such as;<\/p>\n\n<ul>\n\t<li>Used in heat transfer<\/li>\n\t<li>Navigation<\/li>\n\t<li>Sports<\/li>\n\t<li>Three-dimensional geometry<\/li>\n\t<li>Partial differential equation<\/li>\n<\/ul>\n","uploaded_by":"dhasu_sir","user_id":"71","branch":"civil 1st semester","subject":"1","chapter":"6","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"29","title":"Linked List Data Structure","notes_text":"<p>A linked list is a linear data structure, in which the elements are not stored at contiguous memory locations. The elements in a linked list are linked using pointers as shown in the below image:<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/media.geeksforgeeks.org\/wp-content\/cdn-uploads\/gq\/2013\/03\/Linkedlist.png\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>In simple words, a linked list consists of nodes where each node contains a data field and a reference(link) to the next node in the list.<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 6th semester","subject":"4","chapter":"4","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"28","title":"Binary Search Tree","notes_text":"<p><strong>Binary Search Tree<\/strong>&nbsp;is a node-based binary tree data structure which has the following properties:<\/p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys lesser than the node&rsquo;s key.<\/li>\n\t<li>The right subtree of a node contains only nodes with keys greater than the node&rsquo;s key.<\/li>\n\t<li>The left and right subtree each must also be a binary search tree.<\/li>\n<\/ul>\n\n<p><img alt=\"\" src=\"https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/BSTSearch.png\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 6th semester","subject":"4","chapter":"3","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"27","title":"Binary Tree Data Structure","notes_text":"<p>A tree whose elements have at most 2 children is called a binary tree. Since each element in a binary tree can have only 2 children, we typically name them the left and right child.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/www.geeksforgeeks.org\/wp-content\/uploads\/binary-tree-to-DLL.png\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>A Binary Tree node contains following parts.<\/p>\n\n<ol>\n\t<li>Data<\/li>\n\t<li>Pointer to left child<\/li>\n\t<li>Pointer to right child<\/li>\n<\/ol>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 6th semester","subject":"4","chapter":"2","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"26","title":"Array Data Structure","notes_text":"<p>An array is a collection of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array).<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/array-2.png\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>The above image can be looked as a top-level view of a staircase where you are at the base of the staircase. Each element can be uniquely identified by their index in the array (in a similar way as you could identify your friends by the step on which they were on in the above example).<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 6th semester","subject":"4","chapter":"1","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"25","title":"Data Structures","notes_text":"<p>A&nbsp;<strong>data structure<\/strong>&nbsp;is a particular way of organizing data in a computer so that it can be used effectively.<\/p>\n\n<p>For example, we can store a list of items having the same data-type using the&nbsp;<em>array<\/em>&nbsp;data structure.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/manage-college.000webhostapp.com\/upload_image\/images\/220159710.png\" style=\"width:100%\" \/><\/p>\n\n<p>Full details about data structure will be uploaded soon<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 6th semester","subject":"4","chapter":"1","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"24","title":"An Introduction to Digital Logic","notes_text":"<blockquote>\n<p>Up until now the labs have dealt with electricity in its analog form where a quantity is described by the amount of voltage, or current, or charge... expressed as a real number. However a large proportion of electronic equipment, including computers, uses digital electronics where the quantities (usually voltage) are described by two states; on and off. These two states can also be represented by true and false, 1 and 0, and in most physical systems are represented by the voltages 5V and 0V, or something close to that. While the restriction to two states seems limiting it makes many things easier because problems due to noise are minimized. It is generally very easy to reliably distinguish between logic 1 or logic 0.<\/p>\n\n<p>Since many quantities cannot be represented by two states, more than one binary digit can be used to represent a number. For example the number 25<span style=\"font-size:small\"><sub>10<\/sub><\/span>&nbsp;(twenty five base 10) can be represented by the binary number 11001<span style=\"font-size:small\"><sub>2<\/sub><\/span>. It is easy to convert back and forth from binary to decimal by remembering that each digit in a binary number simply corresponds to a power of 2, as every digit in a decimal number corresponds to a power of 10. Using the previous example:<\/p>\n\n<div>\n<table style=\"width:42%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width:7%\">10<span style=\"font-size:x-small\"><sup>1<\/sup><\/span><\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:7%\">10<span style=\"font-size:x-small\"><sup>0<\/sup><\/span><\/td>\n\t\t\t<td style=\"width:18%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">2<span style=\"font-size:x-small\"><sup>4<\/sup><\/span><\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">2<span style=\"font-size:x-small\"><sup>3<\/sup><\/span><\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">2<span style=\"font-size:x-small\"><sup>2<\/sup><\/span><\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">2<span style=\"font-size:x-small\"><sup>1<\/sup><\/span><\/td>\n\t\t\t<td style=\"width:8%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:3%\">\n\t\t\t<p>2<span style=\"font-size:x-small\"><sup>0<\/sup><\/span><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:7%\">(10)<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:7%\">(1)<\/td>\n\t\t\t<td style=\"width:18%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">(16)<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">(8)<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">(4)<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">(2)<\/td>\n\t\t\t<td style=\"width:8%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:23%\">(1)<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:7%\">2<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:7%\">5<\/td>\n\t\t\t<td style=\"width:18%\">=<\/td>\n\t\t\t<td style=\"width:8%\">1<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:9%\">1<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:8%\">0<\/td>\n\t\t\t<td style=\"width:3%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:7%\">0<\/td>\n\t\t\t<td style=\"width:8%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:23%\">1<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:7%\">2*10<\/td>\n\t\t\t<td style=\"width:3%\">+<\/td>\n\t\t\t<td style=\"width:7%\">5*1<\/td>\n\t\t\t<td style=\"width:18%\">=<\/td>\n\t\t\t<td style=\"width:8%\">1*16<\/td>\n\t\t\t<td style=\"width:3%\">+<\/td>\n\t\t\t<td style=\"width:9%\">1*8<\/td>\n\t\t\t<td style=\"width:3%\">+<\/td>\n\t\t\t<td style=\"width:8%\">0*4<\/td>\n\t\t\t<td style=\"width:3%\">+<\/td>\n\t\t\t<td style=\"width:7%\">0*2<\/td>\n\t\t\t<td style=\"width:8%\">+<\/td>\n\t\t\t<td style=\"width:23%\">1*1<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>In general an&nbsp;<em>n<\/em>&nbsp;digit binary number can represent numbers from 0 to 2<span style=\"font-size:small\"><sup><em>n<\/em><\/sup><\/span>-1. For instance a byte is 8 bits and can represent numbers from 0 to 255 (2<span style=\"font-size:small\"><sup>8<\/sup><\/span>-1).&nbsp;&nbsp;<\/p>\n\n<p>More about&nbsp;<a href=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/BinaryMath\/NumSys.html\">binary numbers<\/a>.<\/p>\n\n<p>&nbsp;<\/p>\n<\/blockquote>\n\n<p><strong><span style=\"color:#ff0000\">Combinatorial Logic<\/span><\/strong><\/p>\n\n<blockquote>\n<p>Another advantage of digital electronics is the ability to express signals in terms of logic equations using standard terms from logic:&nbsp;<em>and<\/em>,&nbsp;<em>or<\/em>, and&nbsp;<em>not<\/em>. These functions can be represented by truth tables as shown below with A and B as inputs and C as output.<\/p>\n\n<div>\n<table style=\"width:30%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td colspan=\"3\" style=\"width:30%\"><strong><span style=\"color:#000080\">and<\/span><\/strong><\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td colspan=\"3\" style=\"width:30%\"><strong><span style=\"color:#000080\">or<\/span><\/strong><\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td colspan=\"2\" style=\"width:20%\"><strong><span style=\"color:#000080\">not<\/span><\/strong><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:10%\"><strong>A<\/strong><\/td>\n\t\t\t<td style=\"width:10%\"><strong>B<\/strong><\/td>\n\t\t\t<td style=\"width:10%\"><strong>C<\/strong><\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\"><strong>A<\/strong><\/td>\n\t\t\t<td style=\"width:10%\"><strong>B<\/strong><\/td>\n\t\t\t<td style=\"width:10%\"><strong>C<\/strong><\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\"><strong>A<\/strong><\/td>\n\t\t\t<td style=\"width:10%\"><strong>C<\/strong><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">0<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">1<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:10%\">&nbsp;<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>These logic functions can be represented using a shorthand notation,&nbsp;<em><strong>and<\/strong><\/em>&nbsp;is represented by&nbsp;<span style=\"font-size:small\"><sup>.<\/sup><\/span>&nbsp;or &amp;,&nbsp;<em><strong>or<\/strong><\/em>&nbsp;is represented by + or #, and&nbsp;<em><strong>not<\/strong><\/em>&nbsp;is represented by&nbsp;<span style=\"font-size:small\"><sup>~<\/sup><\/span>&nbsp;or ! (there are also other conventions, the most common is to put a bar over the variable). Thus the equation D equals A and B or not C can be represented as<\/p>\n\n<p>D = A&nbsp;<span style=\"font-size:small\"><sup>.&nbsp;<\/sup><\/span>B+ &tilde;C or by D = A &amp; B # !C<\/p>\n\n<p>Obviously this equation has different meanings depending on whether the&nbsp;<em><strong>and<\/strong><\/em>&nbsp;or the&nbsp;<em><strong>or<\/strong><\/em>&nbsp;function is performed first and parentheses can be used in the normal way to get rid of the ambiguity<\/p>\n\n<p>D = (A&nbsp;<span style=\"font-size:small\"><sup>.&nbsp;<\/sup><\/span>B)+ &tilde;C<\/p>\n\n<p>Other functions that are common are&nbsp;<strong><em>nand<\/em><\/strong>&nbsp;and&nbsp;<strong><em>nor<\/em><\/strong>. The&nbsp;<strong><em>nand<\/em><\/strong>&nbsp;function is an&nbsp;<strong><em>and<\/em><\/strong>&nbsp;function followed by a&nbsp;<strong><em>not<\/em><\/strong>,&nbsp;<strong><em>nor<\/em><\/strong>&nbsp;is an&nbsp;<strong><em>or<\/em><\/strong>&nbsp;function followed by&nbsp;<strong><em>not<\/em><\/strong>. The symbols used in schematics for these functions are given below:<\/p>\n\n<p><img alt=\"wpe4D.gif (1975 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/gates.gif\" style=\"height:56px; width:538px\" \/><\/p>\n\n<p>Logic equations, like any other, can get complicated quickly. To simplify logic equations a system called Boolean algebra (after the mathematician George Boole) was developed. A short selection of its theorems is listed.<\/p>\n\n<div>\n<table style=\"width:631px\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(1)&nbsp;<\/strong>A<sup>.<\/sup>0 = 0<\/span><\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(6)&nbsp;<\/strong>A+1 = 1<\/span><\/td>\n\t\t\t<td style=\"width:13%\">!A<span style=\"font-size:small\"><sup>.<\/sup><\/span>!B<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:231px\"><span style=\"font-size:small\"><strong>(11)&nbsp;<\/strong>(A<sup>.<\/sup>B)<sup>.<\/sup>C = A<sup>.<\/sup>(B<sup>.<\/sup>C)<\/span><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(2)&nbsp;<\/strong>A<sup>.<\/sup>1 = A<\/span><\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(7)&nbsp;<\/strong>A+\ufffd = 1<\/span><\/td>\n\t\t\t<td style=\"width:13%\">1<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:231px\"><span style=\"font-size:small\"><strong>(12)&nbsp;<\/strong>A<sup>.<\/sup>(B+C) = A<sup>.<\/sup>B+B<sup>.<\/sup>C<\/span><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(3)&nbsp;<\/strong>A<sup>.<\/sup>\ufffd = 0<\/span><\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(8)&nbsp;<\/strong>A+A = A<\/span><\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:231px\"><span style=\"font-size:small\"><strong>(13)&nbsp;<\/strong>A+(B<sup>.<\/sup>C)= (A+B)<sup>.<\/sup>(A+C)<\/span><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(4)&nbsp;<\/strong>A+0 = A<\/span><\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(9)&nbsp;<\/strong>A+B = B+A<\/span><\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:231px\"><span style=\"font-size:small\"><strong>(14)&nbsp;<\/strong>!(A+B) = !A<sup>.<\/sup>!B<\/span><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(5)&nbsp;<\/strong>A<sup>.<\/sup>A = A<\/span><\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:177px\"><span style=\"font-size:small\"><strong>(10)&nbsp;<\/strong>(A+B)+C = A+(B+C)<\/span><\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:231px\"><span style=\"font-size:small\"><strong>(15)&nbsp;<\/strong>!(A<sup>.<\/sup>B) = !A+!B<\/span><\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>Some of these rules are quite obvious.&nbsp; For example if we make out the truth table for rule (1) we get:<\/p>\n\n<div>\n<table style=\"width:21%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width:50%\"><strong><span style=\"color:#000080\">A<\/span><\/strong><\/td>\n\t\t\t<td style=\"width:50%\"><strong><span style=\"color:#000080\">A<span style=\"font-size:small\"><sup>.<\/sup><\/span>0<\/span><\/strong><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:50%\">0<\/td>\n\t\t\t<td style=\"width:50%\">0<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:50%\">1<\/td>\n\t\t\t<td style=\"width:50%\">0<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>Some of the other rules are not so obvious.&nbsp; For example rule 14 yields the truth table shown below<\/p>\n\n<div>\n<table style=\"width:43%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width:12%\"><span style=\"color:#000080\"><strong>A<\/strong><\/span><\/td>\n\t\t\t<td style=\"width:12%\"><span style=\"color:#000080\"><strong>B<\/strong><\/span><\/td>\n\t\t\t<td style=\"width:12%\"><span style=\"color:#000080\"><strong>!A<\/strong><\/span><\/td>\n\t\t\t<td style=\"width:12%\"><span style=\"color:#000080\"><strong>!B<\/strong><\/span><\/td>\n\t\t\t<td style=\"width:13%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:13%\"><span style=\"color:#000080\"><strong>A+B<\/strong><\/span><\/td>\n\t\t\t<td style=\"width:13%\"><span style=\"color:#000080\"><strong>!(A+B)<\/strong><\/span><\/td>\n\t\t\t<td style=\"width:13%\"><span style=\"color:#000080\"><strong>!A<span style=\"font-size:small\"><sup>.<\/sup><\/span>!B<\/strong><\/span><\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:13%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"width:13%\">1<\/td>\n\t\t\t<td style=\"width:13%\">1<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:13%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:13%\">1<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:13%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:13%\">1<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:12%\">1<\/td>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:12%\">0<\/td>\n\t\t\t<td style=\"width:13%\">&nbsp;<\/td>\n\t\t\t<td style=\"width:13%\">1<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t\t<td style=\"width:13%\">0<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p><span style=\"font-size:medium\">The truth table shows that rule 14, !(A+B) = !A<sup>.<\/sup>!B, is correct.<\/span><\/p>\n\n<p>These theorems can be used to simplify equations. For example if we start off with the expression&nbsp;<br \/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D = (A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B+(A+C<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C))<span style=\"font-size:small\"><sup>.<\/sup><\/span>A+B,&nbsp;<br \/>\nwe can apply the rules in turn to simplify it.<\/p>\n\n<blockquote>\n<blockquote>\n<div>\n<table style=\"width:38%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width:73%\">D = (A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B+(A+C<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C))<span style=\"font-size:small\"><sup>.<\/sup><\/span>A+B<\/td>\n\t\t\t<td style=\"width:27%\">apply 3<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:73%\">D = (A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B+A)<span style=\"font-size:small\"><sup>.<\/sup><\/span>A+B<\/td>\n\t\t\t<td style=\"width:27%\">apply 2<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:73%\">D = (A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B+A<span style=\"font-size:small\"><sup>.<\/sup><\/span>1)<span style=\"font-size:small\"><sup>.<\/sup><\/span>A+B<\/td>\n\t\t\t<td style=\"width:27%\">apply 12<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:73%\">D = (A.(B+1))<span style=\"font-size:small\"><sup>.<\/sup><\/span>A+B<\/td>\n\t\t\t<td style=\"width:27%\">apply 6<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:73%\">D = A<span style=\"font-size:small\"><sup>.<\/sup><\/span>A+B<\/td>\n\t\t\t<td style=\"width:27%\">apply 5<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"width:73%\">D = A+B<\/td>\n\t\t\t<td style=\"width:27%\">&nbsp;<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n<\/blockquote>\n<\/blockquote>\n\n<p>As with the algebra you learned in elementary school, this kind of simplification gets tedious, and messy, quickly. Luckily there is a graphical shortcut to doing logic minimizations called a Karnaugh map. This introduction will only cover Karnaugh maps with up to four variables, though the technique can be generalized to larger systems - though these systems are usually simplified using computers. Consider the truth table of the equation given above, which is given in the forma of a truth table and a three variable Karnaugh map:<\/p>\n\n<p><img alt=\"wpe50.gif (2421 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/TruthTable1.gif\" style=\"height:204px; width:365px\" \/><\/p>\n\n<p>One way to get a solution is simply to write an expression for each true result in the table.&nbsp; For example, the lower-leftmost true result from the Karnaugh map represents the case where A=1 and B=0 and C=0 and it can be written as A<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;B<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C.&nbsp; The true result next to it can be written as A<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;B<span style=\"font-size:small\"><sup>.<\/sup><\/span>C.&nbsp; Now to develop a logic expression, we would just&nbsp;<em>or<\/em>&nbsp;together all of these terms.&nbsp; Thus our result (including an expression for each true term -- 6 in all) is:<\/p>\n\n<p>A<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;B<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C&nbsp; +&nbsp; A<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;B<span style=\"font-size:small\"><sup>.<\/sup><\/span>C&nbsp; +&nbsp; A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B<span style=\"font-size:small\"><sup>.<\/sup><\/span>C&nbsp; +&nbsp; A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B<span style=\"font-size:small\"><sup>.~<\/sup><\/span>C&nbsp; +&nbsp; &tilde;A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B<span style=\"font-size:small\"><sup>.<\/sup><\/span>C&nbsp;&nbsp;<strong>+&nbsp;&nbsp;<\/strong>A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C<\/p>\n\n<p>This is called the sum-of-products form.&nbsp; Although this expression is correct, it is also unwieldy. We could use the theorems of Boolean algebra to simplify the expression, which is often difficult and does not guarantee a best solution.&nbsp; However we can use a visual technique based on Karnaugh maps to develop a minimal sum-of-products solution.<\/p>\n\n<p>To get the simplified equation one takes the table and encircles as many 1&#39;s as possible in rectangular groups that have 1, 2, 4, or 8 elements (i.e., any power of 2). The idea is to make the groupings as large as possible. For the example above this can be accomplished with 2 groupings:<\/p>\n\n<p><img alt=\"wpe51.gif (1597 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/karnaugh1.gif\" style=\"height:73px; width:167px\" \/><\/p>\n\n<p>If you examine these groupings carefully you can see that the red grouping has no dependence on the variables A or C, and is totally described by the statement B=1. The blue group on the other hand has no dependence on B or C and is described by the statement A=1. Therefore to include the elements from both groups we can use the equation A+B. If you had used smaller groups you would have obtained an equivalent, though more complicated, expression. Try it. This graphical method is clearly easier than the technique used earlier that employed algebraic simplifications.<\/p>\n\n<p>You should examine the map shown above and convince yourself that any grouping of a single element needs all three variables to describe it. For instance the uppermost &quot;1&quot; on the right hand side is described by B<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C<span style=\"font-size:small\"><sup>.<\/sup><\/span>&nbsp;\ufffd A grouping of two gets rid of the dependence on one of the variables (the two rightmost ones have no dependence on A and are given by B<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C). A group of four, as you have seen, depends only on one variable. Therefore by choosing the smallest number of groups (i.e., the largest groups), you will come up with the minimal equation describing those groups. The result obtained with the Karnaugh map is called the minimal sum of products form because it generates the smallest number of product (<em>and<\/em>ed) terms.<\/p>\n\n<p>Also, if you look at the table again you can convince yourself that it is possible to &quot;wrap-around&quot; the ends of the table, as shown<\/p>\n\n<p><img alt=\"wpe52.gif (1572 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/karnaugh2.gif\" style=\"height:62px; width:165px\" \/><\/p>\n\n<p>The two groups are represented by B<span style=\"font-size:small\"><sup>.<\/sup><\/span>C (the red group) and the blue group that wraps around by A<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C.<\/p>\n\n<p>This technique also works for two variables (trivial), four variables (shown below), and even more (though this gets complicated and will not be described here). A typical four variable map and its groupings are shown here.<\/p>\n\n<p><img alt=\"wpe56.gif (2974 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/karnaugh3.gif\" style=\"height:122px; width:414px\" \/><\/p>\n\n<p>which simplifies to: A<span style=\"font-size:small\"><sup>.<\/sup><\/span>B<span style=\"font-size:small\"><sup>.<\/sup><\/span>D<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;C + \ufffd<span style=\"font-size:small\"><sup>.<\/sup><\/span>B<span style=\"font-size:small\"><sup>.<\/sup><\/span>&tilde;D + \ufffd<span style=\"font-size:small\"><sup>.<\/sup><\/span>C + &tilde;B<span style=\"font-size:small\"><sup>.<\/sup><\/span>C. Prove it to yourself.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>Months in school<\/p>\n\n<p><img alt=\"wpe58.gif (3488 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/MonthTable.gif\" style=\"height:239px; width:277px\" \/><\/p>\n\n<p>Truth Table and Karnaugh map<\/p>\n\n<p><img alt=\"wpe61.gif (3707 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/MonthKarnaugh.gif\" style=\"height:197px; width:462px\" \/><\/p>\n\n<p>Alternate solution (others possible)<\/p>\n\n<p><img alt=\"wpe62.gif (2543 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/MonthKarnaugh2.gif\" style=\"height:205px; width:217px\" \/><\/p>\n<\/blockquote>\n\n<p><span style=\"font-size:medium\"><span style=\"color:#000000\"><span style=\"font-family:&quot;Times New Roman&quot;\">&nbsp;<\/span><\/span><\/span><\/p>\n\n<p><strong><span style=\"color:#ff0000\">Sequential Logic<\/span><\/strong><\/p>\n\n<blockquote>\n<p>The digital logic described thus far is called combinatorial logic because the output depends solely upon the presently existing combination of the inputs;&nbsp;<em>past<\/em>&nbsp;values of the inputs are not important. Sequential logic deals with the issue of time dependence and can get much more complicated than combinatorial logic -- much in the same way that differential equations are more difficult than algebraic equations. The fundamental building block of sequential circuits is the flip-flop (which flips and flops between different logic states) of which there are several. The simplest flip-flop is the R-S, or Set-Reset flip flop which is made up of two gates:<\/p>\n\n<p><img alt=\"wpe5A.gif (2207 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/RS.gif\" style=\"height:134px; width:393px\" \/><\/p>\n\n<p>Note that flip flops are often quite complicated at the gate level and are frequently represented by a &quot;black box&quot; with inputs and outputs as shown at right.<\/p>\n\n<p>Let&#39;s see how this device operates by examining the four possible inputs, if S,R=1,0 then Q=1 and &tilde;Q=0, therefore S=1&nbsp;<em>sets<\/em>&nbsp;Q. If S,R=0,1 then Q=1 and &tilde;Q=0, or R=1&nbsp;<em>resets<\/em>&nbsp;Q. If S,R=1,1 then Q=0 and &tilde;Q=0; a result that doesn&#39;t seem to make sense, but we will deal with this soon. If S,R=0,0 then you can convince yourself that the outputs are indeterminate -- that is you cannot figure out what they are. This is where the time dependence of the circuit is important: if S,R goes from the 1,0 to the 0,0 state then Q=1 and &tilde;Q=0; if S,R goes from 0,1 to 0,0 then Q=0 and &tilde;Q=1; but if S,R goes from 1,1 to 0,0 then Q and &tilde;Q are still indeterminate and so we will call 1,1 the disallowed state and design our circuit so this state is not used. The 0,0 state is called the&nbsp;<em>hold<\/em>&nbsp;state. The truth table for this circuit is given as:<\/p>\n\n<div>\n<table style=\"width:138px\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>S<span style=\"font-size:small\"><sub>n<\/sub><\/span><\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>Rn<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:61px\">\n\t\t\t<p>Q<span style=\"font-size:small\"><sub>n<\/sub><\/span><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:61px\">\n\t\t\t<p>Q<span style=\"font-size:small\"><sub>n-1<\/sub><\/span><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:61px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:61px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:19px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:61px\">\n\t\t\t<p><span style=\"font-size:small\">Disallowed<\/span><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>Note that the variables have a subscript associated with them. This subscript denotes time, so that if S,R=0,0 at time n then the output Q retains the value it had at time n-1.<\/p>\n\n<p>There are several other types of flip-flops, but the most popular are the D and J-K flip-flops which have the following truth tables:<\/p>\n\n<p>&nbsp;<\/p>\n\n<div>\n<table style=\"height:62px; width:84px\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"height:21px; vertical-align:top; width:35px\">\n\t\t\t<p><strong>D<span style=\"font-size:small\"><sub>n-1<\/sub><\/span><\/strong><\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"height:21px; vertical-align:top; width:26px\">\n\t\t\t<p><strong>Q<span style=\"font-size:small\"><sub>n<\/sub><\/span><\/strong><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"height:1px; vertical-align:top; width:35px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"height:1px; vertical-align:top; width:26px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"height:1px; vertical-align:top; width:35px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"height:1px; vertical-align:top; width:26px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<div>\n<table style=\"width:138px\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:27px\">\n\t\t\t<p><strong>J<span style=\"font-size:small\"><sub>n-1<\/sub><\/span><\/strong><\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:31px\">\n\t\t\t<p><strong>K<span style=\"font-size:small\"><sub>n-1<\/sub><\/span><\/strong><\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:38px\">\n\t\t\t<p><strong>Q<span style=\"font-size:small\"><sub>n<\/sub><\/span><\/strong><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:27px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:31px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:38px\">\n\t\t\t<p>Q<span style=\"font-size:small\"><sub>n-1<\/sub><\/span><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:27px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:31px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:38px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:27px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:31px\">\n\t\t\t<p>0<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:38px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td style=\"vertical-align:TOP; width:27px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:31px\">\n\t\t\t<p>1<\/p>\n\t\t\t<\/td>\n\t\t\t<td style=\"vertical-align:TOP; width:38px\">\n\t\t\t<p>&tilde;Q<span style=\"font-size:small\"><sub>n-1<\/sub><\/span><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n<\/div>\n\n<p>and the circuit symbols:<\/p>\n\n<p><img alt=\"wpe5D.gif (1988 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/DandJK.gif\" style=\"height:141px; width:372px\" \/><\/p>\n\n<p>Note that these flip-flops have another input called the &quot;clock&quot;. The transition from time&nbsp;<em>n-1<\/em>&nbsp;to time&nbsp;<em>n<\/em>&nbsp;occurs at some transition of the clock; usually when the clock goes from low to high (rising edge) or from high to low (falling edge), but is sometimes level sensitive (for instance the output may do what is required by the input while the clock is high and holds the last value when the clock is low). In addition to the clock there are sometimes&nbsp;<em>reset<\/em>&nbsp;inputs to clear the output to logic 0, and preset inputs to set the outputs to logic 1.<\/p>\n\n<p>To further understand these devices consider the circuit shown below (actually a simplified portion of an integrated circuit, the 7493):<\/p>\n\n<p><span style=\"font-size:small\">Note: the inverted outputs of the flip-flops aren&#39;t shown since we aren&#39;t using them.<\/span><\/p>\n\n<p><img alt=\"wpe6C.gif (3716 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/JKCounter.gif\" style=\"height:203px; width:526px\" \/><\/p>\n\n<p>Assume that the flip-flops are falling edge triggered and that the outputs are initially all 0, then if a series of clock pulses is fed into the circuit, Clock, you should be able to convince yourself that the output is given by:<\/p>\n\n<p><img alt=\"wpe6B.gif (2578 bytes)\" src=\"http:\/\/www.swarthmore.edu\/NatSci\/echeeve1\/Ref\/Digital\/CountTiming.gif\" style=\"height:93px; width:478px\" \/><\/p>\n\n<p>Thus Q<span style=\"font-size:small\"><sub>a<\/sub><\/span>&nbsp;is half the frequency of the clock, Q<span style=\"font-size:small\"><sub>b<\/sub><\/span>&nbsp;half that of Q<span style=\"font-size:small\"><sub>a<\/sub><\/span>, and Q<span style=\"font-size:small\"><sub>c<\/sub><\/span>&nbsp;half that of Q<span style=\"font-size:small\"><sub>b<\/sub><\/span>; making Q<span style=\"font-size:small\"><sub>c<\/sub><\/span>&nbsp;1\/8 the frequency of the clock. Also if you use Q<span style=\"font-size:small\"><sub>a<\/sub><\/span>&nbsp;through Q<span style=\"font-size:small\"><sub>c<\/sub><\/span>&nbsp;to represent a number (Q<span style=\"font-size:small\"><sub>a<\/sub><\/span>=least significant bit), then the output of this circuit cycles repetitively through eight states representing the numbers 0<span style=\"font-size:small\"><sub>10<\/sub><\/span>&nbsp;to 7<span style=\"font-size:small\"><sub>10<\/sub><\/span>&nbsp;(0<span style=\"font-size:small\"><sub>2<\/sub><\/span>&nbsp;to 111<span style=\"font-size:small\"><sub>2<\/sub><\/span>). Therefore this circuit is known as a divide by eight counter. The actual 7493 is a little more complicated and includes a reset signal so that you can reset the counter to 0 at any time.&nbsp; We will use counters in the next lab.<\/p>\n\n<p>Thus ends the introduction to digital logic.<\/p>\n<\/blockquote>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 1st semester","subject":"9","chapter":"4","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"23","title":"Operating System - Overview","notes_text":"<p>An Operating System (OS) is an interface between a computer user and computer hardware. An operating system is a software which performs all the basic tasks like file management, memory management, process management, handling input and output, and controlling peripheral devices such as disk drives and printers.<\/p>\n\n<p>Some popular Operating Systems include Linux Operating System, Windows Operating System, VMS, OS\/400, AIX, z\/OS, etc.<\/p>\n\n<h2>Definition<\/h2>\n\n<p>An operating system is a program that acts as an interface between the user and the computer hardware and controls the execution of all kinds of programs.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><img alt=\"\" src=\"https:\/\/manage-college.000webhostapp.com\/upload_image\/images\/725320937.jpg\" style=\"width:100%\" \/><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>Following are some of important functions of an operating System.<\/p>\n\n<ul>\n\t<li>Memory Management<\/li>\n\t<li>Processor Management<\/li>\n\t<li>Device Management<\/li>\n\t<li>File Management<\/li>\n\t<li>Security<\/li>\n\t<li>Control over system performance<\/li>\n\t<li>Job accounting<\/li>\n\t<li>Error detecting aids<\/li>\n\t<li>Coordination between other software and users<\/li>\n<\/ul>\n\n<h2>Memory Management<\/h2>\n\n<p>Memory management refers to management of Primary Memory or Main Memory. Main memory is a large array of words or bytes where each word or byte has its own address.<\/p>\n\n<p>Main memory provides a fast storage that can be accessed directly by the CPU. For a program to be executed, it must in the main memory. An Operating System does the following activities for memory management &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p>Keeps tracks of primary memory, i.e., what part of it are in use by whom, what part are not in use.<\/p>\n\t<\/li>\n\t<li>\n\t<p>In multiprogramming, the OS decides which process will get memory when and how much.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the memory when a process requests it to do so.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates the memory when a process no longer needs it or has been terminated.<\/p>\n\t<\/li>\n<\/ul>\n\n<h2>Processor Management<\/h2>\n\n<p>In multiprogramming environment, the OS decides which process gets the processor when and for how much time. This function is called&nbsp;<strong>process scheduling<\/strong>. An Operating System does the following activities for processor management &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p>Keeps tracks of processor and status of process. The program responsible for this task is known as&nbsp;<strong>traffic controller<\/strong>.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the processor (CPU) to a process.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates processor when a process is no longer required.<\/p>\n\t<\/li>\n<\/ul>\n\n<h2>Device Management<\/h2>\n\n<p>An Operating System manages device communication via their respective drivers. It does the following activities for device management &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p>Keeps tracks of all devices. Program responsible for this task is known as the&nbsp;<strong>I\/O controller<\/strong>.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Decides which process gets the device when and for how much time.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the device in the efficient way.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates devices.<\/p>\n\t<\/li>\n<\/ul>\n\n<h2>File Management<\/h2>\n\n<p>A file system is normally organized into directories for easy navigation and usage. These directories may contain files and other directions.<\/p>\n\n<p>An Operating System does the following activities for file management &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p>Keeps track of information, location, uses, status etc. The collective facilities are often known as&nbsp;<strong>file system<\/strong>.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Decides who gets the resources.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the resources.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates the resources.<\/p>\n\t<\/li>\n<\/ul>\n\n<h2>Other Important Activities<\/h2>\n\n<p>Following are some of the important activities that an Operating System performs &minus;<\/p>\n\n<ul>\n\t<li>\n\t<p><strong>Security<\/strong>&nbsp;&minus; By means of password and similar other techniques, it prevents unauthorized access to programs and data.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Control over system performance<\/strong>&nbsp;&minus; Recording delays between request for a service and response from the system.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Job accounting<\/strong>&nbsp;&minus; Keeping track of time and resources used by various jobs and users.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Error detecting aids<\/strong>&nbsp;&minus; Production of dumps, traces, error messages, and other debugging and error detecting aids.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Coordination between other softwares and users<\/strong>&nbsp;&minus; Coordination and assignment of compilers, interpreters, assemblers and other software to the various users of the computer systems.<\/p>\n\n\t<p>Following are some of important functions of an operating System.<\/p>\n\t<\/li>\n\t<li>Memory Management<\/li>\n\t<li>Processor Management<\/li>\n\t<li>Device Management<\/li>\n\t<li>File Management<\/li>\n\t<li>Security<\/li>\n\t<li>Control over system performance<\/li>\n\t<li>Job accounting<\/li>\n\t<li>Error detecting aids<\/li>\n\t<li>Coordination between other software and users<\/li>\n\t<li>\n\t<h2>Memory Management<\/h2>\n\n\t<p>Memory management refers to management of Primary Memory or Main Memory. Main memory is a large array of words or bytes where each word or byte has its own address.<\/p>\n\n\t<p>Main memory provides a fast storage that can be accessed directly by the CPU. For a program to be executed, it must in the main memory. An Operating System does the following activities for memory management &minus;<\/p>\n\t<\/li>\n\t<li>\n\t<p>Keeps tracks of primary memory, i.e., what part of it are in use by whom, what part are not in use.<\/p>\n\t<\/li>\n\t<li>\n\t<p>In multiprogramming, the OS decides which process will get memory when and how much.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the memory when a process requests it to do so.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates the memory when a process no longer needs it or has been terminated.<\/p>\n\t<\/li>\n\t<li>\n\t<p>In multiprogramming environment, the OS decides which process gets the processor when and for how much time. This function is called&nbsp;<strong>process scheduling<\/strong>. An Operating System does the following activities for processor management &minus;<\/p>\n\t<\/li>\n\t<li>\n\t<p>Keeps tracks of processor and status of process. The program responsible for this task is known as&nbsp;<strong>traffic controller<\/strong>.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the processor (CPU) to a process.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates processor when a process is no longer required.<\/p>\n\t<\/li>\n\t<li>\n\t<h2>Device Management<\/h2>\n\n\t<p>An Operating System manages device communication via their respective drivers. It does the following activities for device management &minus;<\/p>\n\t<\/li>\n\t<li>\n\t<p>Keeps tracks of all devices. Program responsible for this task is known as the&nbsp;<strong>I\/O controller<\/strong>.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Decides which process gets the device when and for how much time.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the device in the efficient way.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates devices.<\/p>\n\t<\/li>\n\t<li>\n\t<h2>File Management<\/h2>\n\n\t<p>A file system is normally organized into directories for easy navigation and usage. These directories may contain files and other directions.<\/p>\n\n\t<p>An Operating System does the following activities for file management &minus;<\/p>\n\t<\/li>\n\t<li>\n\t<p>Keeps track of information, location, uses, status etc. The collective facilities are often known as&nbsp;<strong>file system<\/strong>.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Decides who gets the resources.<\/p>\n\t<\/li>\n\t<li>\n\t<p>Allocates the resources.<\/p>\n\t<\/li>\n\t<li>\n\t<p>De-allocates the resources.<\/p>\n\t<\/li>\n\t<li>\n\t<h2>Other Important Activities<\/h2>\n\n\t<p>Following are some of the important activities that an Operating System performs &minus;<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Security<\/strong>&nbsp;&minus; By means of password and similar other techniques, it prevents unauthorized access to programs and data.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Control over system performance<\/strong>&nbsp;&minus; Recording delays between request for a service and response from the system.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Job accounting<\/strong>&nbsp;&minus; Keeping track of time and resources used by various jobs and users.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Error detecting aids<\/strong>&nbsp;&minus; Production of dumps, traces, error messages, and other debugging and error detecting aids.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>Coordination between other softwares and users<\/strong>&nbsp;&minus; Coordination and assignment of compilers, interpreters, assemblers and other software to the various users of the computer systems.<\/p>\n\t<\/li>\n\t<li>\n\t<h2>Processor Management<\/h2>\n\t<\/li>\n<\/ul>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 3rd semester","subject":"10","chapter":"7","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"22","title":"Factorial program in C++","notes_text":"<p>Factorial of n is the product of all positive descending integers. Factorial of n is denoted by n!. For example:<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p>4!&nbsp;=&nbsp;4*3*2*1&nbsp;=&nbsp;24&nbsp;&nbsp;<\/p>\n\n<p>6!&nbsp;=&nbsp;6*5*4*3*2*1&nbsp;=&nbsp;720&nbsp;&nbsp;&nbsp;<\/p>\n<\/div>\n\n<p>Here, 4! is pronounced as &quot;4 factorial&quot;, it is also called &quot;4 bang&quot; or &quot;4 shriek&quot;.<\/p>\n\n<p>The factorial is normally used in Combinations and Permutations (mathematics).<\/p>\n\n<p>There are many ways to write the factorial program in C++ language. Let&#39;s see the 2 ways to write the factorial program.<\/p>\n\n<ul>\n\t<li>Factorial Program using loop<\/li>\n\t<li>Factorial Program using recursion&#39;<\/li>\n<\/ul>\n\n<hr \/>\n<h2>Factorial Program using Loop<\/h2>\n\n<p>Let&#39;s see the factorial Program in C++ using loop.<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p>#include&nbsp;&lt;iostream&gt;&nbsp;&nbsp;<\/p>\n\n<p>using&nbsp;namespace&nbsp;std;&nbsp;&nbsp;<\/p>\n\n<p>int&nbsp;main()&nbsp;&nbsp;<\/p>\n\n<p>{&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;int&nbsp;i,fact=1,number;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;cout&lt;&lt;&quot;Enter&nbsp;any&nbsp;Number:&nbsp;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;cin&gt;&gt;number;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;for(i=1;i&lt;=number;i++){&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fact=fact*i;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;cout&lt;&lt;&quot;Factorial&nbsp;of&nbsp;&quot;&nbsp;&lt;&lt;number&lt;&lt;&quot;&nbsp;is:&nbsp;&quot;&lt;&lt;fact&lt;&lt;endl;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;return&nbsp;0;&nbsp;&nbsp;<\/p>\n\n<p>}&nbsp;&nbsp;&nbsp;<\/p>\n<\/div>\n\n<p>&nbsp;Output:<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nEnter any Number: 5  \n Factorial of 5 is: 120 <\/pre>\n<\/div>\n\n<h2>Factorial Program using Recursion<\/h2>\n\n<p>Let&#39;s see the factorial program in C++ using recursion.<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<p>#include&lt;iostream&gt;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>using&nbsp;namespace&nbsp;std;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>int&nbsp;main()&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>{&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>int&nbsp;factorial(int);&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>int&nbsp;fact,value;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>cout&lt;&lt;&quot;Enter&nbsp;any&nbsp;number:&nbsp;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>cin&gt;&gt;value;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>fact=factorial(value);&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>cout&lt;&lt;&quot;Factorial&nbsp;of&nbsp;a&nbsp;number&nbsp;is:&nbsp;&quot;&lt;&lt;fact&lt;&lt;endl;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>return&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>}&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>int&nbsp;factorial(int&nbsp;n)&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>{&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>if(n&lt;0)&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>return(-1);&nbsp;\/*Wrong&nbsp;value*\/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>if(n==0)&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>return(1);&nbsp;&nbsp;\/*Terminating&nbsp;condition*\/&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>else&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>{&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>return(n*factorial(n-1));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>}&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\n\n<p>}&nbsp;&nbsp;<\/p>\n<\/div>\n\n<p>&nbsp;Output:<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nEnter any number: 6   \nFactorial of a number is: 720<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 5th semester","subject":"6","chapter":"1","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"21","title":"Palindrome program in C++","notes_text":"<p>A&nbsp;<strong>palindrome number<\/strong>&nbsp;is a number that is same after reverse. For example 121, 34543, 343, 131, 48984 are the palindrome numbers.<\/p>\r\n\r\n<h2>Palindrome number algorithm<\/h2>\r\n\r\n<ul>\r\n\t<li>Get the number from user<\/li>\r\n\t<li>Hold the number in temporary variable<\/li>\r\n\t<li>Reverse the number<\/li>\r\n\t<li>Compare the temporary number with reversed number<\/li>\r\n\t<li>If both numbers are same, print palindrome number<\/li>\r\n\t<li>Else print not palindrome number<\/li>\r\n<\/ul>\r\n\r\n<p>Let&#39;s see the palindrome program in C++. In this program, we will get an input from the user and check whether number is palindrome or not.<\/p>\r\n\r\n<div \r\nclass='' stylee=\"background:#eeeeee; border-radius:20px; border:1px solid #cccccc; padding:5px 10px\">\r\n<p>#include&nbsp;&lt;iostream&gt;&nbsp;&nbsp;<\/p>\r\n\r\n<p>using&nbsp;namespace&nbsp;std;&nbsp;&nbsp;<\/p>\r\n\r\n<p>int&nbsp;main()&nbsp;&nbsp;<\/p>\r\n\r\n<p>{&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;&nbsp;int&nbsp;n,r,sum=0,temp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;&nbsp;cout&lt;&lt;&quot;Enter&nbsp;the&nbsp;Number=&quot;;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;&nbsp;cin&gt;&gt;n;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;temp=n;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;while(n&gt;0)&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>{&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;r=n%10;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;sum=(sum*10)+r;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;n=n\/10;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>}&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>if(temp==sum)&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>cout&lt;&lt;&quot;Number&nbsp;is&nbsp;Palindrome.&quot;;&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>else&nbsp;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>cout&lt;&lt;&quot;Number&nbsp;is&nbsp;not&nbsp;Palindrome.&quot;;&nbsp;&nbsp;&nbsp;<\/p>\r\n\r\n<p>&nbsp;&nbsp;return&nbsp;0;&nbsp;&nbsp;<\/p>\r\n\r\n<p>}&nbsp;&nbsp;<\/p>\r\n<\/div>\r\n\r\n<p>Output:<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<pre>\r\nEnter the Number=121   \r\n Number is Palindrome.\t\r\n<\/pre>\r\n<\/div>\r\n\r\n<p>&nbsp;<\/p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<pre>\r\nEnter the number=113  \r\nNumber is not Palindrome.\r\n<\/pre>\r\n<\/div>\r\n\r\n<p>&nbsp;<\/p>\r\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 5th semester","subject":"3","chapter":"9","uploaded_time":"3 months ago","status":"enable","pinned":"no"},{"message":"positive","id":"20","title":"Prime Number Program in C++","notes_text":"<p>Prime number is a number that is greater than 1 and divided by 1 or itself. In other words, prime numbers can&#39;t be divided by other numbers than itself or 1. For example 2, 3, 5, 7, 11, 13, 17, 19, 23.... are the prime numbers.<\/p>\n\n<p>Let&#39;s see the prime number program in C++. In this C++ program, we will take an input from the user and check whether the number is prime or not.<\/p>\n\n<div class=\"special\" style=\"background:#eeeeee; border-radius:20px; border:1px solid #cccccc; padding:5px 10px\">\n<p>#include&nbsp;&lt;iostream&gt;&nbsp;&nbsp;<\/p>\n\n<p>using&nbsp;namespace&nbsp;std;&nbsp;&nbsp;<\/p>\n\n<p>int&nbsp;main()&nbsp;&nbsp;<\/p>\n\n<p>{&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;int&nbsp;n,&nbsp;i,&nbsp;m=0,&nbsp;flag=0;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;Enter&nbsp;the&nbsp;Number&nbsp;to&nbsp;check&nbsp;Prime:&nbsp;&quot;;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;cin&nbsp;&gt;&gt;&nbsp;n;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;m=n\/2;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;for(i&nbsp;=&nbsp;2;&nbsp;i&nbsp;&lt;=&nbsp;m;&nbsp;i++)&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;{&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n&nbsp;%&nbsp;i&nbsp;==&nbsp;0)&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Number&nbsp;is&nbsp;not&nbsp;Prime.&quot;&lt;&lt;endl;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=1;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;}&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;if&nbsp;(flag==0)&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;Number&nbsp;is&nbsp;Prime.&quot;&lt;&lt;endl;&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;&nbsp;return&nbsp;0;&nbsp;&nbsp;<\/p>\n\n<p>}&nbsp;<\/p>\n<\/div>\n\n<p>Output:<\/p>\n\n<div class=\"special\" style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nEnter the Number to check Prime: 17  \n Number is Prime. \n<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\n<pre>\nEnter the Number to check Prime: 57  \nNumber is not Prime.\n<\/pre>\n<\/div>\n\n<p>&nbsp;<\/p>\n","uploaded_by":"khan_sir","user_id":"70","branch":"cs 5th semester","subject":"1","chapter":"4","uploaded_time":"3 months ago","status":"enable","pinned":"no"}]